{
  "version": 3,
  "sources": ["../../zrender/lib/svg/SVGPathRebuilder.js", "../../zrender/lib/svg/mapStyleToAttrs.js", "../../zrender/lib/svg/core.js", "../../zrender/lib/svg/cssAnimation.js", "../../zrender/lib/svg/graphic.js", "../../zrender/lib/svg/domapi.js", "../../zrender/lib/svg/patch.js", "../../zrender/lib/svg/Painter.js", "../../echarts/lib/renderer/installSVGRenderer.js", "../../zrender/lib/canvas/Layer.js", "../../zrender/lib/canvas/Painter.js", "../../echarts/lib/renderer/installCanvasRenderer.js"],
  "sourcesContent": ["import { isAroundZero } from './helper.js';\r\nvar mathSin = Math.sin;\r\nvar mathCos = Math.cos;\r\nvar PI = Math.PI;\r\nvar PI2 = Math.PI * 2;\r\nvar degree = 180 / PI;\r\nvar SVGPathRebuilder = (function () {\r\n    function SVGPathRebuilder() {\r\n    }\r\n    SVGPathRebuilder.prototype.reset = function (precision) {\r\n        this._start = true;\r\n        this._d = [];\r\n        this._str = '';\r\n        this._p = Math.pow(10, precision || 4);\r\n    };\r\n    SVGPathRebuilder.prototype.moveTo = function (x, y) {\r\n        this._add('M', x, y);\r\n    };\r\n    SVGPathRebuilder.prototype.lineTo = function (x, y) {\r\n        this._add('L', x, y);\r\n    };\r\n    SVGPathRebuilder.prototype.bezierCurveTo = function (x, y, x2, y2, x3, y3) {\r\n        this._add('C', x, y, x2, y2, x3, y3);\r\n    };\r\n    SVGPathRebuilder.prototype.quadraticCurveTo = function (x, y, x2, y2) {\r\n        this._add('Q', x, y, x2, y2);\r\n    };\r\n    SVGPathRebuilder.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\r\n        this.ellipse(cx, cy, r, r, 0, startAngle, endAngle, anticlockwise);\r\n    };\r\n    SVGPathRebuilder.prototype.ellipse = function (cx, cy, rx, ry, psi, startAngle, endAngle, anticlockwise) {\r\n        var dTheta = endAngle - startAngle;\r\n        var clockwise = !anticlockwise;\r\n        var dThetaPositive = Math.abs(dTheta);\r\n        var isCircle = isAroundZero(dThetaPositive - PI2)\r\n            || (clockwise ? dTheta >= PI2 : -dTheta >= PI2);\r\n        var unifiedTheta = dTheta > 0 ? dTheta % PI2 : (dTheta % PI2 + PI2);\r\n        var large = false;\r\n        if (isCircle) {\r\n            large = true;\r\n        }\r\n        else if (isAroundZero(dThetaPositive)) {\r\n            large = false;\r\n        }\r\n        else {\r\n            large = (unifiedTheta >= PI) === !!clockwise;\r\n        }\r\n        var x0 = cx + rx * mathCos(startAngle);\r\n        var y0 = cy + ry * mathSin(startAngle);\r\n        if (this._start) {\r\n            this._add('M', x0, y0);\r\n        }\r\n        var xRot = Math.round(psi * degree);\r\n        if (isCircle) {\r\n            var p = 1 / this._p;\r\n            var dTheta_1 = (clockwise ? 1 : -1) * (PI2 - p);\r\n            this._add('A', rx, ry, xRot, 1, +clockwise, cx + rx * mathCos(startAngle + dTheta_1), cy + ry * mathSin(startAngle + dTheta_1));\r\n            if (p > 1e-2) {\r\n                this._add('A', rx, ry, xRot, 0, +clockwise, x0, y0);\r\n            }\r\n        }\r\n        else {\r\n            var x = cx + rx * mathCos(endAngle);\r\n            var y = cy + ry * mathSin(endAngle);\r\n            this._add('A', rx, ry, xRot, +large, +clockwise, x, y);\r\n        }\r\n    };\r\n    SVGPathRebuilder.prototype.rect = function (x, y, w, h) {\r\n        this._add('M', x, y);\r\n        this._add('l', w, 0);\r\n        this._add('l', 0, h);\r\n        this._add('l', -w, 0);\r\n        this._add('Z');\r\n    };\r\n    SVGPathRebuilder.prototype.closePath = function () {\r\n        if (this._d.length > 0) {\r\n            this._add('Z');\r\n        }\r\n    };\r\n    SVGPathRebuilder.prototype._add = function (cmd, a, b, c, d, e, f, g, h) {\r\n        var vals = [];\r\n        var p = this._p;\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            var val = arguments[i];\r\n            if (isNaN(val)) {\r\n                this._invalid = true;\r\n                return;\r\n            }\r\n            vals.push(Math.round(val * p) / p);\r\n        }\r\n        this._d.push(cmd + vals.join(' '));\r\n        this._start = cmd === 'Z';\r\n    };\r\n    SVGPathRebuilder.prototype.generateStr = function () {\r\n        this._str = this._invalid ? '' : this._d.join('');\r\n        this._d = [];\r\n    };\r\n    SVGPathRebuilder.prototype.getStr = function () {\r\n        return this._str;\r\n    };\r\n    return SVGPathRebuilder;\r\n}());\r\nexport default SVGPathRebuilder;\r\n", "import { DEFAULT_PATH_STYLE } from '../graphic/Path.js';\r\nimport ZRImage from '../graphic/Image.js';\r\nimport { getLineDash } from '../canvas/dashStyle.js';\r\nimport { map } from '../core/util.js';\r\nimport { normalizeColor } from './helper.js';\r\nvar NONE = 'none';\r\nvar mathRound = Math.round;\r\nfunction pathHasFill(style) {\r\n    var fill = style.fill;\r\n    return fill != null && fill !== NONE;\r\n}\r\nfunction pathHasStroke(style) {\r\n    var stroke = style.stroke;\r\n    return stroke != null && stroke !== NONE;\r\n}\r\nvar strokeProps = ['lineCap', 'miterLimit', 'lineJoin'];\r\nvar svgStrokeProps = map(strokeProps, function (prop) { return \"stroke-\" + prop.toLowerCase(); });\r\nexport default function mapStyleToAttrs(updateAttr, style, el, forceUpdate) {\r\n    var opacity = style.opacity == null ? 1 : style.opacity;\r\n    if (el instanceof ZRImage) {\r\n        updateAttr('opacity', opacity);\r\n        return;\r\n    }\r\n    if (pathHasFill(style)) {\r\n        var fill = normalizeColor(style.fill);\r\n        updateAttr('fill', fill.color);\r\n        var fillOpacity = style.fillOpacity != null\r\n            ? style.fillOpacity * fill.opacity * opacity\r\n            : fill.opacity * opacity;\r\n        if (forceUpdate || fillOpacity < 1) {\r\n            updateAttr('fill-opacity', fillOpacity);\r\n        }\r\n    }\r\n    else {\r\n        updateAttr('fill', NONE);\r\n    }\r\n    if (pathHasStroke(style)) {\r\n        var stroke = normalizeColor(style.stroke);\r\n        updateAttr('stroke', stroke.color);\r\n        var strokeScale = style.strokeNoScale\r\n            ? el.getLineScale()\r\n            : 1;\r\n        var strokeWidth = (strokeScale ? (style.lineWidth || 0) / strokeScale : 0);\r\n        var strokeOpacity = style.strokeOpacity != null\r\n            ? style.strokeOpacity * stroke.opacity * opacity\r\n            : stroke.opacity * opacity;\r\n        var strokeFirst = style.strokeFirst;\r\n        if (forceUpdate || strokeWidth !== 1) {\r\n            updateAttr('stroke-width', strokeWidth);\r\n        }\r\n        if (forceUpdate || strokeFirst) {\r\n            updateAttr('paint-order', strokeFirst ? 'stroke' : 'fill');\r\n        }\r\n        if (forceUpdate || strokeOpacity < 1) {\r\n            updateAttr('stroke-opacity', strokeOpacity);\r\n        }\r\n        if (style.lineDash) {\r\n            var _a = getLineDash(el), lineDash = _a[0], lineDashOffset = _a[1];\r\n            if (lineDash) {\r\n                lineDashOffset = mathRound(lineDashOffset || 0);\r\n                updateAttr('stroke-dasharray', lineDash.join(','));\r\n                if (lineDashOffset || forceUpdate) {\r\n                    updateAttr('stroke-dashoffset', lineDashOffset);\r\n                }\r\n            }\r\n        }\r\n        else if (forceUpdate) {\r\n            updateAttr('stroke-dasharray', NONE);\r\n        }\r\n        for (var i = 0; i < strokeProps.length; i++) {\r\n            var propName = strokeProps[i];\r\n            if (forceUpdate || style[propName] !== DEFAULT_PATH_STYLE[propName]) {\r\n                var val = style[propName] || DEFAULT_PATH_STYLE[propName];\r\n                val && updateAttr(svgStrokeProps[i], val);\r\n            }\r\n        }\r\n    }\r\n    else if (forceUpdate) {\r\n        updateAttr('stroke', NONE);\r\n    }\r\n}\r\n", "import { keys, map } from '../core/util.js';\r\nimport { encodeHTML } from '../core/dom.js';\r\nexport var SVGNS = 'http://www.w3.org/2000/svg';\r\nexport var XLINKNS = 'http://www.w3.org/1999/xlink';\r\nexport var XMLNS = 'http://www.w3.org/2000/xmlns/';\r\nexport var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace';\r\nexport function createElement(name) {\r\n    return document.createElementNS(SVGNS, name);\r\n}\r\n;\r\nexport function createVNode(tag, key, attrs, children, text) {\r\n    return {\r\n        tag: tag,\r\n        attrs: attrs || {},\r\n        children: children,\r\n        text: text,\r\n        key: key\r\n    };\r\n}\r\nfunction createElementOpen(name, attrs) {\r\n    var attrsStr = [];\r\n    if (attrs) {\r\n        for (var key in attrs) {\r\n            var val = attrs[key];\r\n            var part = key;\r\n            if (val === false) {\r\n                continue;\r\n            }\r\n            else if (val !== true && val != null) {\r\n                part += \"=\\\"\" + val + \"\\\"\";\r\n            }\r\n            attrsStr.push(part);\r\n        }\r\n    }\r\n    return \"<\" + name + \" \" + attrsStr.join(' ') + \">\";\r\n}\r\nfunction createElementClose(name) {\r\n    return \"</\" + name + \">\";\r\n}\r\nexport function vNodeToString(el, opts) {\r\n    opts = opts || {};\r\n    var S = opts.newline ? '\\n' : '';\r\n    function convertElToString(el) {\r\n        var children = el.children, tag = el.tag, attrs = el.attrs, text = el.text;\r\n        return createElementOpen(tag, attrs)\r\n            + (tag !== 'style' ? encodeHTML(text) : text || '')\r\n            + (children ? \"\" + S + map(children, function (child) { return convertElToString(child); }).join(S) + S : '')\r\n            + createElementClose(tag);\r\n    }\r\n    return convertElToString(el);\r\n}\r\nexport function getCssString(selectorNodes, animationNodes, opts) {\r\n    opts = opts || {};\r\n    var S = opts.newline ? '\\n' : '';\r\n    var bracketBegin = \" {\" + S;\r\n    var bracketEnd = S + \"}\";\r\n    var selectors = map(keys(selectorNodes), function (className) {\r\n        return className + bracketBegin + map(keys(selectorNodes[className]), function (attrName) {\r\n            return attrName + \":\" + selectorNodes[className][attrName] + \";\";\r\n        }).join(S) + bracketEnd;\r\n    }).join(S);\r\n    var animations = map(keys(animationNodes), function (animationName) {\r\n        return \"@keyframes \" + animationName + bracketBegin + map(keys(animationNodes[animationName]), function (percent) {\r\n            return percent + bracketBegin + map(keys(animationNodes[animationName][percent]), function (attrName) {\r\n                var val = animationNodes[animationName][percent][attrName];\r\n                if (attrName === 'd') {\r\n                    val = \"path(\\\"\" + val + \"\\\")\";\r\n                }\r\n                return attrName + \":\" + val + \";\";\r\n            }).join(S) + bracketEnd;\r\n        }).join(S) + bracketEnd;\r\n    }).join(S);\r\n    if (!selectors && !animations) {\r\n        return '';\r\n    }\r\n    return ['<![CDATA[', selectors, animations, ']]>'].join(S);\r\n}\r\nexport function createBrushScope(zrId) {\r\n    return {\r\n        zrId: zrId,\r\n        shadowCache: {},\r\n        patternCache: {},\r\n        gradientCache: {},\r\n        clipPathCache: {},\r\n        defs: {},\r\n        cssNodes: {},\r\n        cssAnims: {},\r\n        cssClassIdx: 0,\r\n        cssAnimIdx: 0,\r\n        shadowIdx: 0,\r\n        gradientIdx: 0,\r\n        patternIdx: 0,\r\n        clipPathIdx: 0\r\n    };\r\n}\r\nexport function createSVGVNode(width, height, children, useViewBox) {\r\n    return createVNode('svg', 'root', {\r\n        'width': width,\r\n        'height': height,\r\n        'xmlns': SVGNS,\r\n        'xmlns:xlink': XLINKNS,\r\n        'version': '1.1',\r\n        'baseProfile': 'full',\r\n        'viewBox': useViewBox ? \"0 0 \" + width + \" \" + height : false\r\n    }, children);\r\n}\r\n", "import { copyTransform } from '../core/Transformable.js';\r\nimport { createBrushScope } from './core.js';\r\nimport SVGPathRebuilder from './SVGPathRebuilder.js';\r\nimport PathProxy from '../core/PathProxy.js';\r\nimport { getPathPrecision, getSRTTransformString } from './helper.js';\r\nimport { each, extend, filter, isNumber, isString, keys } from '../core/util.js';\r\nimport CompoundPath from '../graphic/CompoundPath.js';\r\nimport { createCubicEasingFunc } from '../animation/cubicEasing.js';\r\nexport var EASING_MAP = {\r\n    cubicIn: '0.32,0,0.67,0',\r\n    cubicOut: '0.33,1,0.68,1',\r\n    cubicInOut: '0.65,0,0.35,1',\r\n    quadraticIn: '0.11,0,0.5,0',\r\n    quadraticOut: '0.5,1,0.89,1',\r\n    quadraticInOut: '0.45,0,0.55,1',\r\n    quarticIn: '0.5,0,0.75,0',\r\n    quarticOut: '0.25,1,0.5,1',\r\n    quarticInOut: '0.76,0,0.24,1',\r\n    quinticIn: '0.64,0,0.78,0',\r\n    quinticOut: '0.22,1,0.36,1',\r\n    quinticInOut: '0.83,0,0.17,1',\r\n    sinusoidalIn: '0.12,0,0.39,0',\r\n    sinusoidalOut: '0.61,1,0.88,1',\r\n    sinusoidalInOut: '0.37,0,0.63,1',\r\n    exponentialIn: '0.7,0,0.84,0',\r\n    exponentialOut: '0.16,1,0.3,1',\r\n    exponentialInOut: '0.87,0,0.13,1',\r\n    circularIn: '0.55,0,1,0.45',\r\n    circularOut: '0,0.55,0.45,1',\r\n    circularInOut: '0.85,0,0.15,1'\r\n};\r\nvar transformOriginKey = 'transform-origin';\r\nfunction buildPathString(el, kfShape, path) {\r\n    var shape = extend({}, el.shape);\r\n    extend(shape, kfShape);\r\n    el.buildPath(path, shape);\r\n    var svgPathBuilder = new SVGPathRebuilder();\r\n    svgPathBuilder.reset(getPathPrecision(el));\r\n    path.rebuildPath(svgPathBuilder, 1);\r\n    svgPathBuilder.generateStr();\r\n    return svgPathBuilder.getStr();\r\n}\r\nfunction setTransformOrigin(target, transform) {\r\n    var originX = transform.originX, originY = transform.originY;\r\n    if (originX || originY) {\r\n        target[transformOriginKey] = originX + \"px \" + originY + \"px\";\r\n    }\r\n}\r\nexport var ANIMATE_STYLE_MAP = {\r\n    fill: 'fill',\r\n    opacity: 'opacity',\r\n    lineWidth: 'stroke-width',\r\n    lineDashOffset: 'stroke-dashoffset'\r\n};\r\nfunction addAnimation(cssAnim, scope) {\r\n    var animationName = scope.zrId + '-ani-' + scope.cssAnimIdx++;\r\n    scope.cssAnims[animationName] = cssAnim;\r\n    return animationName;\r\n}\r\nfunction createCompoundPathCSSAnimation(el, attrs, scope) {\r\n    var paths = el.shape.paths;\r\n    var composedAnim = {};\r\n    var cssAnimationCfg;\r\n    var cssAnimationName;\r\n    each(paths, function (path) {\r\n        var subScope = createBrushScope(scope.zrId);\r\n        subScope.animation = true;\r\n        createCSSAnimation(path, {}, subScope, true);\r\n        var cssAnims = subScope.cssAnims;\r\n        var cssNodes = subScope.cssNodes;\r\n        var animNames = keys(cssAnims);\r\n        var len = animNames.length;\r\n        if (!len) {\r\n            return;\r\n        }\r\n        cssAnimationName = animNames[len - 1];\r\n        var lastAnim = cssAnims[cssAnimationName];\r\n        for (var percent in lastAnim) {\r\n            var kf = lastAnim[percent];\r\n            composedAnim[percent] = composedAnim[percent] || { d: '' };\r\n            composedAnim[percent].d += kf.d || '';\r\n        }\r\n        for (var className in cssNodes) {\r\n            var val = cssNodes[className].animation;\r\n            if (val.indexOf(cssAnimationName) >= 0) {\r\n                cssAnimationCfg = val;\r\n            }\r\n        }\r\n    });\r\n    if (!cssAnimationCfg) {\r\n        return;\r\n    }\r\n    attrs.d = false;\r\n    var animationName = addAnimation(composedAnim, scope);\r\n    return cssAnimationCfg.replace(cssAnimationName, animationName);\r\n}\r\nfunction getEasingFunc(easing) {\r\n    return isString(easing)\r\n        ? EASING_MAP[easing]\r\n            ? \"cubic-bezier(\" + EASING_MAP[easing] + \")\"\r\n            : createCubicEasingFunc(easing) ? easing : ''\r\n        : '';\r\n}\r\nexport function createCSSAnimation(el, attrs, scope, onlyShape) {\r\n    var animators = el.animators;\r\n    var len = animators.length;\r\n    var cssAnimations = [];\r\n    if (el instanceof CompoundPath) {\r\n        var animationCfg = createCompoundPathCSSAnimation(el, attrs, scope);\r\n        if (animationCfg) {\r\n            cssAnimations.push(animationCfg);\r\n        }\r\n        else if (!len) {\r\n            return;\r\n        }\r\n    }\r\n    else if (!len) {\r\n        return;\r\n    }\r\n    var groupAnimators = {};\r\n    for (var i = 0; i < len; i++) {\r\n        var animator = animators[i];\r\n        var cfgArr = [animator.getMaxTime() / 1000 + 's'];\r\n        var easing = getEasingFunc(animator.getClip().easing);\r\n        var delay = animator.getDelay();\r\n        if (easing) {\r\n            cfgArr.push(easing);\r\n        }\r\n        else {\r\n            cfgArr.push('linear');\r\n        }\r\n        if (delay) {\r\n            cfgArr.push(delay / 1000 + 's');\r\n        }\r\n        if (animator.getLoop()) {\r\n            cfgArr.push('infinite');\r\n        }\r\n        var cfg = cfgArr.join(' ');\r\n        groupAnimators[cfg] = groupAnimators[cfg] || [cfg, []];\r\n        groupAnimators[cfg][1].push(animator);\r\n    }\r\n    function createSingleCSSAnimation(groupAnimator) {\r\n        var animators = groupAnimator[1];\r\n        var len = animators.length;\r\n        var transformKfs = {};\r\n        var shapeKfs = {};\r\n        var finalKfs = {};\r\n        var animationTimingFunctionAttrName = 'animation-timing-function';\r\n        function saveAnimatorTrackToCssKfs(animator, cssKfs, toCssAttrName) {\r\n            var tracks = animator.getTracks();\r\n            var maxTime = animator.getMaxTime();\r\n            for (var k = 0; k < tracks.length; k++) {\r\n                var track = tracks[k];\r\n                if (track.needsAnimate()) {\r\n                    var kfs = track.keyframes;\r\n                    var attrName = track.propName;\r\n                    toCssAttrName && (attrName = toCssAttrName(attrName));\r\n                    if (attrName) {\r\n                        for (var i = 0; i < kfs.length; i++) {\r\n                            var kf = kfs[i];\r\n                            var percent = Math.round(kf.time / maxTime * 100) + '%';\r\n                            var kfEasing = getEasingFunc(kf.easing);\r\n                            var rawValue = kf.rawValue;\r\n                            if (isString(rawValue) || isNumber(rawValue)) {\r\n                                cssKfs[percent] = cssKfs[percent] || {};\r\n                                cssKfs[percent][attrName] = kf.rawValue;\r\n                                if (kfEasing) {\r\n                                    cssKfs[percent][animationTimingFunctionAttrName] = kfEasing;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (var i = 0; i < len; i++) {\r\n            var animator = animators[i];\r\n            var targetProp = animator.targetName;\r\n            if (!targetProp) {\r\n                !onlyShape && saveAnimatorTrackToCssKfs(animator, transformKfs);\r\n            }\r\n            else if (targetProp === 'shape') {\r\n                saveAnimatorTrackToCssKfs(animator, shapeKfs);\r\n            }\r\n        }\r\n        for (var percent in transformKfs) {\r\n            var transform = {};\r\n            copyTransform(transform, el);\r\n            extend(transform, transformKfs[percent]);\r\n            var str = getSRTTransformString(transform);\r\n            var timingFunction = transformKfs[percent][animationTimingFunctionAttrName];\r\n            finalKfs[percent] = str ? {\r\n                transform: str\r\n            } : {};\r\n            setTransformOrigin(finalKfs[percent], transform);\r\n            if (timingFunction) {\r\n                finalKfs[percent][animationTimingFunctionAttrName] = timingFunction;\r\n            }\r\n        }\r\n        ;\r\n        var path;\r\n        var canAnimateShape = true;\r\n        for (var percent in shapeKfs) {\r\n            finalKfs[percent] = finalKfs[percent] || {};\r\n            var isFirst = !path;\r\n            var timingFunction = shapeKfs[percent][animationTimingFunctionAttrName];\r\n            if (isFirst) {\r\n                path = new PathProxy();\r\n            }\r\n            var len_1 = path.len();\r\n            path.reset();\r\n            finalKfs[percent].d = buildPathString(el, shapeKfs[percent], path);\r\n            var newLen = path.len();\r\n            if (!isFirst && len_1 !== newLen) {\r\n                canAnimateShape = false;\r\n                break;\r\n            }\r\n            if (timingFunction) {\r\n                finalKfs[percent][animationTimingFunctionAttrName] = timingFunction;\r\n            }\r\n        }\r\n        ;\r\n        if (!canAnimateShape) {\r\n            for (var percent in finalKfs) {\r\n                delete finalKfs[percent].d;\r\n            }\r\n        }\r\n        if (!onlyShape) {\r\n            for (var i = 0; i < len; i++) {\r\n                var animator = animators[i];\r\n                var targetProp = animator.targetName;\r\n                if (targetProp === 'style') {\r\n                    saveAnimatorTrackToCssKfs(animator, finalKfs, function (propName) { return ANIMATE_STYLE_MAP[propName]; });\r\n                }\r\n            }\r\n        }\r\n        var percents = keys(finalKfs);\r\n        var allTransformOriginSame = true;\r\n        var transformOrigin;\r\n        for (var i = 1; i < percents.length; i++) {\r\n            var p0 = percents[i - 1];\r\n            var p1 = percents[i];\r\n            if (finalKfs[p0][transformOriginKey] !== finalKfs[p1][transformOriginKey]) {\r\n                allTransformOriginSame = false;\r\n                break;\r\n            }\r\n            transformOrigin = finalKfs[p0][transformOriginKey];\r\n        }\r\n        if (allTransformOriginSame && transformOrigin) {\r\n            for (var percent in finalKfs) {\r\n                if (finalKfs[percent][transformOriginKey]) {\r\n                    delete finalKfs[percent][transformOriginKey];\r\n                }\r\n            }\r\n            attrs[transformOriginKey] = transformOrigin;\r\n        }\r\n        if (filter(percents, function (percent) { return keys(finalKfs[percent]).length > 0; }).length) {\r\n            var animationName = addAnimation(finalKfs, scope);\r\n            return animationName + \" \" + groupAnimator[0] + \" both\";\r\n        }\r\n    }\r\n    for (var key in groupAnimators) {\r\n        var animationCfg = createSingleCSSAnimation(groupAnimators[key]);\r\n        if (animationCfg) {\r\n            cssAnimations.push(animationCfg);\r\n        }\r\n    }\r\n    if (cssAnimations.length) {\r\n        var className = scope.zrId + '-cls-' + scope.cssClassIdx++;\r\n        scope.cssNodes['.' + className] = {\r\n            animation: cssAnimations.join(',')\r\n        };\r\n        attrs[\"class\"] = className;\r\n    }\r\n}\r\n", "import { adjustTextY, getIdURL, getMatrixStr, getPathPrecision, getShadowKey, getSRTTransformString, hasShadow, isAroundZero, isGradient, isImagePattern, isLinearGradient, isPattern, isRadialGradient, normalizeColor, round4, TEXT_ALIGN_TO_ANCHOR } from './helper.js';\r\nimport Path from '../graphic/Path.js';\r\nimport ZRImage from '../graphic/Image.js';\r\nimport { getLineHeight } from '../contain/text.js';\r\nimport TSpan from '../graphic/TSpan.js';\r\nimport SVGPathRebuilder from './SVGPathRebuilder.js';\r\nimport mapStyleToAttrs from './mapStyleToAttrs.js';\r\nimport { createVNode, vNodeToString } from './core.js';\r\nimport { assert, clone, isFunction, isString, logError, map, retrieve2 } from '../core/util.js';\r\nimport { createOrUpdateImage } from '../graphic/helper/image.js';\r\nimport { createCSSAnimation } from './cssAnimation.js';\r\nimport { hasSeparateFont, parseFontSize } from '../graphic/Text.js';\r\nimport { DEFAULT_FONT, DEFAULT_FONT_FAMILY } from '../core/platform.js';\r\nvar round = Math.round;\r\nfunction isImageLike(val) {\r\n    return val && isString(val.src);\r\n}\r\nfunction isCanvasLike(val) {\r\n    return val && isFunction(val.toDataURL);\r\n}\r\nfunction setStyleAttrs(attrs, style, el, scope) {\r\n    mapStyleToAttrs(function (key, val) {\r\n        var isFillStroke = key === 'fill' || key === 'stroke';\r\n        if (isFillStroke && isGradient(val)) {\r\n            setGradient(style, attrs, key, scope);\r\n        }\r\n        else if (isFillStroke && isPattern(val)) {\r\n            setPattern(el, attrs, key, scope);\r\n        }\r\n        else {\r\n            attrs[key] = val;\r\n        }\r\n    }, style, el, false);\r\n    setShadow(el, attrs, scope);\r\n}\r\nfunction noRotateScale(m) {\r\n    return isAroundZero(m[0] - 1)\r\n        && isAroundZero(m[1])\r\n        && isAroundZero(m[2])\r\n        && isAroundZero(m[3] - 1);\r\n}\r\nfunction noTranslate(m) {\r\n    return isAroundZero(m[4]) && isAroundZero(m[5]);\r\n}\r\nfunction setTransform(attrs, m, compress) {\r\n    if (m && !(noTranslate(m) && noRotateScale(m))) {\r\n        var mul = compress ? 10 : 1e4;\r\n        attrs.transform = noRotateScale(m)\r\n            ? \"translate(\" + round(m[4] * mul) / mul + \" \" + round(m[5] * mul) / mul + \")\" : getMatrixStr(m);\r\n    }\r\n}\r\nfunction convertPolyShape(shape, attrs, mul) {\r\n    var points = shape.points;\r\n    var strArr = [];\r\n    for (var i = 0; i < points.length; i++) {\r\n        strArr.push(round(points[i][0] * mul) / mul);\r\n        strArr.push(round(points[i][1] * mul) / mul);\r\n    }\r\n    attrs.points = strArr.join(' ');\r\n}\r\nfunction validatePolyShape(shape) {\r\n    return !shape.smooth;\r\n}\r\nfunction createAttrsConvert(desc) {\r\n    var normalizedDesc = map(desc, function (item) {\r\n        return (typeof item === 'string' ? [item, item] : item);\r\n    });\r\n    return function (shape, attrs, mul) {\r\n        for (var i = 0; i < normalizedDesc.length; i++) {\r\n            var item = normalizedDesc[i];\r\n            var val = shape[item[0]];\r\n            if (val != null) {\r\n                attrs[item[1]] = round(val * mul) / mul;\r\n            }\r\n        }\r\n    };\r\n}\r\nvar builtinShapesDef = {\r\n    circle: [createAttrsConvert(['cx', 'cy', 'r'])],\r\n    polyline: [convertPolyShape, validatePolyShape],\r\n    polygon: [convertPolyShape, validatePolyShape]\r\n};\r\nfunction hasShapeAnimation(el) {\r\n    var animators = el.animators;\r\n    for (var i = 0; i < animators.length; i++) {\r\n        if (animators[i].targetName === 'shape') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function brushSVGPath(el, scope) {\r\n    var style = el.style;\r\n    var shape = el.shape;\r\n    var builtinShpDef = builtinShapesDef[el.type];\r\n    var attrs = {};\r\n    var needsAnimate = scope.animation;\r\n    var svgElType = 'path';\r\n    var strokePercent = el.style.strokePercent;\r\n    var precision = (scope.compress && getPathPrecision(el)) || 4;\r\n    if (builtinShpDef\r\n        && !scope.willUpdate\r\n        && !(builtinShpDef[1] && !builtinShpDef[1](shape))\r\n        && !(needsAnimate && hasShapeAnimation(el))\r\n        && !(strokePercent < 1)) {\r\n        svgElType = el.type;\r\n        var mul = Math.pow(10, precision);\r\n        builtinShpDef[0](shape, attrs, mul);\r\n    }\r\n    else {\r\n        var needBuildPath = !el.path || el.shapeChanged();\r\n        if (!el.path) {\r\n            el.createPathProxy();\r\n        }\r\n        var path = el.path;\r\n        if (needBuildPath) {\r\n            path.beginPath();\r\n            el.buildPath(path, el.shape);\r\n            el.pathUpdated();\r\n        }\r\n        var pathVersion = path.getVersion();\r\n        var elExt = el;\r\n        var svgPathBuilder = elExt.__svgPathBuilder;\r\n        if (elExt.__svgPathVersion !== pathVersion\r\n            || !svgPathBuilder\r\n            || strokePercent !== elExt.__svgPathStrokePercent) {\r\n            if (!svgPathBuilder) {\r\n                svgPathBuilder = elExt.__svgPathBuilder = new SVGPathRebuilder();\r\n            }\r\n            svgPathBuilder.reset(precision);\r\n            path.rebuildPath(svgPathBuilder, strokePercent);\r\n            svgPathBuilder.generateStr();\r\n            elExt.__svgPathVersion = pathVersion;\r\n            elExt.__svgPathStrokePercent = strokePercent;\r\n        }\r\n        attrs.d = svgPathBuilder.getStr();\r\n    }\r\n    setTransform(attrs, el.transform);\r\n    setStyleAttrs(attrs, style, el, scope);\r\n    scope.animation && createCSSAnimation(el, attrs, scope);\r\n    return createVNode(svgElType, el.id + '', attrs);\r\n}\r\nexport function brushSVGImage(el, scope) {\r\n    var style = el.style;\r\n    var image = style.image;\r\n    if (image && !isString(image)) {\r\n        if (isImageLike(image)) {\r\n            image = image.src;\r\n        }\r\n        else if (isCanvasLike(image)) {\r\n            image = image.toDataURL();\r\n        }\r\n    }\r\n    if (!image) {\r\n        return;\r\n    }\r\n    var x = style.x || 0;\r\n    var y = style.y || 0;\r\n    var dw = style.width;\r\n    var dh = style.height;\r\n    var attrs = {\r\n        href: image,\r\n        width: dw,\r\n        height: dh\r\n    };\r\n    if (x) {\r\n        attrs.x = x;\r\n    }\r\n    if (y) {\r\n        attrs.y = y;\r\n    }\r\n    setTransform(attrs, el.transform);\r\n    setStyleAttrs(attrs, style, el, scope);\r\n    scope.animation && createCSSAnimation(el, attrs, scope);\r\n    return createVNode('image', el.id + '', attrs);\r\n}\r\n;\r\nexport function brushSVGTSpan(el, scope) {\r\n    var style = el.style;\r\n    var text = style.text;\r\n    text != null && (text += '');\r\n    if (!text || isNaN(style.x) || isNaN(style.y)) {\r\n        return;\r\n    }\r\n    var font = style.font || DEFAULT_FONT;\r\n    var x = style.x || 0;\r\n    var y = adjustTextY(style.y || 0, getLineHeight(font), style.textBaseline);\r\n    var textAlign = TEXT_ALIGN_TO_ANCHOR[style.textAlign]\r\n        || style.textAlign;\r\n    var attrs = {\r\n        'dominant-baseline': 'central',\r\n        'text-anchor': textAlign\r\n    };\r\n    if (hasSeparateFont(style)) {\r\n        var separatedFontStr = '';\r\n        var fontStyle = style.fontStyle;\r\n        var fontSize = parseFontSize(style.fontSize);\r\n        if (!parseFloat(fontSize)) {\r\n            return;\r\n        }\r\n        var fontFamily = style.fontFamily || DEFAULT_FONT_FAMILY;\r\n        var fontWeight = style.fontWeight;\r\n        separatedFontStr += \"font-size:\" + fontSize + \";font-family:\" + fontFamily + \";\";\r\n        if (fontStyle && fontStyle !== 'normal') {\r\n            separatedFontStr += \"font-style:\" + fontStyle + \";\";\r\n        }\r\n        if (fontWeight && fontWeight !== 'normal') {\r\n            separatedFontStr += \"font-weight:\" + fontWeight + \";\";\r\n        }\r\n        attrs.style = separatedFontStr;\r\n    }\r\n    else {\r\n        attrs.style = \"font: \" + font;\r\n    }\r\n    if (text.match(/\\s/)) {\r\n        attrs['xml:space'] = 'preserve';\r\n    }\r\n    if (x) {\r\n        attrs.x = x;\r\n    }\r\n    if (y) {\r\n        attrs.y = y;\r\n    }\r\n    setTransform(attrs, el.transform);\r\n    setStyleAttrs(attrs, style, el, scope);\r\n    scope.animation && createCSSAnimation(el, attrs, scope);\r\n    return createVNode('text', el.id + '', attrs, undefined, text);\r\n}\r\nexport function brush(el, scope) {\r\n    if (el instanceof Path) {\r\n        return brushSVGPath(el, scope);\r\n    }\r\n    else if (el instanceof ZRImage) {\r\n        return brushSVGImage(el, scope);\r\n    }\r\n    else if (el instanceof TSpan) {\r\n        return brushSVGTSpan(el, scope);\r\n    }\r\n}\r\nfunction setShadow(el, attrs, scope) {\r\n    var style = el.style;\r\n    if (hasShadow(style)) {\r\n        var shadowKey = getShadowKey(el);\r\n        var shadowCache = scope.shadowCache;\r\n        var shadowId = shadowCache[shadowKey];\r\n        if (!shadowId) {\r\n            var globalScale = el.getGlobalScale();\r\n            var scaleX = globalScale[0];\r\n            var scaleY = globalScale[1];\r\n            if (!scaleX || !scaleY) {\r\n                return;\r\n            }\r\n            var offsetX = style.shadowOffsetX || 0;\r\n            var offsetY = style.shadowOffsetY || 0;\r\n            var blur_1 = style.shadowBlur;\r\n            var _a = normalizeColor(style.shadowColor), opacity = _a.opacity, color = _a.color;\r\n            var stdDx = blur_1 / 2 / scaleX;\r\n            var stdDy = blur_1 / 2 / scaleY;\r\n            var stdDeviation = stdDx + ' ' + stdDy;\r\n            shadowId = scope.zrId + '-s' + scope.shadowIdx++;\r\n            scope.defs[shadowId] = createVNode('filter', shadowId, {\r\n                'id': shadowId,\r\n                'x': '-100%',\r\n                'y': '-100%',\r\n                'width': '300%',\r\n                'height': '300%'\r\n            }, [\r\n                createVNode('feDropShadow', '', {\r\n                    'dx': offsetX / scaleX,\r\n                    'dy': offsetY / scaleY,\r\n                    'stdDeviation': stdDeviation,\r\n                    'flood-color': color,\r\n                    'flood-opacity': opacity\r\n                })\r\n            ]);\r\n            shadowCache[shadowKey] = shadowId;\r\n        }\r\n        attrs.filter = getIdURL(shadowId);\r\n    }\r\n}\r\nexport function setGradient(style, attrs, target, scope) {\r\n    var val = style[target];\r\n    var gradientTag;\r\n    var gradientAttrs = {\r\n        'gradientUnits': val.global\r\n            ? 'userSpaceOnUse'\r\n            : 'objectBoundingBox'\r\n    };\r\n    if (isLinearGradient(val)) {\r\n        gradientTag = 'linearGradient';\r\n        gradientAttrs.x1 = val.x;\r\n        gradientAttrs.y1 = val.y;\r\n        gradientAttrs.x2 = val.x2;\r\n        gradientAttrs.y2 = val.y2;\r\n    }\r\n    else if (isRadialGradient(val)) {\r\n        gradientTag = 'radialGradient';\r\n        gradientAttrs.cx = retrieve2(val.x, 0.5);\r\n        gradientAttrs.cy = retrieve2(val.y, 0.5);\r\n        gradientAttrs.r = retrieve2(val.r, 0.5);\r\n    }\r\n    else {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            logError('Illegal gradient type.');\r\n        }\r\n        return;\r\n    }\r\n    var colors = val.colorStops;\r\n    var colorStops = [];\r\n    for (var i = 0, len = colors.length; i < len; ++i) {\r\n        var offset = round4(colors[i].offset) * 100 + '%';\r\n        var stopColor = colors[i].color;\r\n        var _a = normalizeColor(stopColor), color = _a.color, opacity = _a.opacity;\r\n        var stopsAttrs = {\r\n            'offset': offset\r\n        };\r\n        stopsAttrs['stop-color'] = color;\r\n        if (opacity < 1) {\r\n            stopsAttrs['stop-opacity'] = opacity;\r\n        }\r\n        colorStops.push(createVNode('stop', i + '', stopsAttrs));\r\n    }\r\n    var gradientVNode = createVNode(gradientTag, '', gradientAttrs, colorStops);\r\n    var gradientKey = vNodeToString(gradientVNode);\r\n    var gradientCache = scope.gradientCache;\r\n    var gradientId = gradientCache[gradientKey];\r\n    if (!gradientId) {\r\n        gradientId = scope.zrId + '-g' + scope.gradientIdx++;\r\n        gradientCache[gradientKey] = gradientId;\r\n        gradientAttrs.id = gradientId;\r\n        scope.defs[gradientId] = createVNode(gradientTag, gradientId, gradientAttrs, colorStops);\r\n    }\r\n    attrs[target] = getIdURL(gradientId);\r\n}\r\nexport function setPattern(el, attrs, target, scope) {\r\n    var val = el.style[target];\r\n    var boundingRect = el.getBoundingRect();\r\n    var patternAttrs = {};\r\n    var repeat = val.repeat;\r\n    var noRepeat = repeat === 'no-repeat';\r\n    var repeatX = repeat === 'repeat-x';\r\n    var repeatY = repeat === 'repeat-y';\r\n    var child;\r\n    if (isImagePattern(val)) {\r\n        var imageWidth_1 = val.imageWidth;\r\n        var imageHeight_1 = val.imageHeight;\r\n        var imageSrc = void 0;\r\n        var patternImage = val.image;\r\n        if (isString(patternImage)) {\r\n            imageSrc = patternImage;\r\n        }\r\n        else if (isImageLike(patternImage)) {\r\n            imageSrc = patternImage.src;\r\n        }\r\n        else if (isCanvasLike(patternImage)) {\r\n            imageSrc = patternImage.toDataURL();\r\n        }\r\n        if (typeof Image === 'undefined') {\r\n            var errMsg = 'Image width/height must been given explictly in svg-ssr renderer.';\r\n            assert(imageWidth_1, errMsg);\r\n            assert(imageHeight_1, errMsg);\r\n        }\r\n        else if (imageWidth_1 == null || imageHeight_1 == null) {\r\n            var setSizeToVNode_1 = function (vNode, img) {\r\n                if (vNode) {\r\n                    var svgEl = vNode.elm;\r\n                    var width = imageWidth_1 || img.width;\r\n                    var height = imageHeight_1 || img.height;\r\n                    if (vNode.tag === 'pattern') {\r\n                        if (repeatX) {\r\n                            height = 1;\r\n                            width /= boundingRect.width;\r\n                        }\r\n                        else if (repeatY) {\r\n                            width = 1;\r\n                            height /= boundingRect.height;\r\n                        }\r\n                    }\r\n                    vNode.attrs.width = width;\r\n                    vNode.attrs.height = height;\r\n                    if (svgEl) {\r\n                        svgEl.setAttribute('width', width);\r\n                        svgEl.setAttribute('height', height);\r\n                    }\r\n                }\r\n            };\r\n            var createdImage = createOrUpdateImage(imageSrc, null, el, function (img) {\r\n                noRepeat || setSizeToVNode_1(patternVNode, img);\r\n                setSizeToVNode_1(child, img);\r\n            });\r\n            if (createdImage && createdImage.width && createdImage.height) {\r\n                imageWidth_1 = imageWidth_1 || createdImage.width;\r\n                imageHeight_1 = imageHeight_1 || createdImage.height;\r\n            }\r\n        }\r\n        child = createVNode('image', 'img', {\r\n            href: imageSrc,\r\n            width: imageWidth_1,\r\n            height: imageHeight_1\r\n        });\r\n        patternAttrs.width = imageWidth_1;\r\n        patternAttrs.height = imageHeight_1;\r\n    }\r\n    else if (val.svgElement) {\r\n        child = clone(val.svgElement);\r\n        patternAttrs.width = val.svgWidth;\r\n        patternAttrs.height = val.svgHeight;\r\n    }\r\n    if (!child) {\r\n        return;\r\n    }\r\n    var patternWidth;\r\n    var patternHeight;\r\n    if (noRepeat) {\r\n        patternWidth = patternHeight = 1;\r\n    }\r\n    else if (repeatX) {\r\n        patternHeight = 1;\r\n        patternWidth = patternAttrs.width / boundingRect.width;\r\n    }\r\n    else if (repeatY) {\r\n        patternWidth = 1;\r\n        patternHeight = patternAttrs.height / boundingRect.height;\r\n    }\r\n    else {\r\n        patternAttrs.patternUnits = 'userSpaceOnUse';\r\n    }\r\n    if (patternWidth != null && !isNaN(patternWidth)) {\r\n        patternAttrs.width = patternWidth;\r\n    }\r\n    if (patternHeight != null && !isNaN(patternHeight)) {\r\n        patternAttrs.height = patternHeight;\r\n    }\r\n    var patternTransform = getSRTTransformString(val);\r\n    patternTransform && (patternAttrs.patternTransform = patternTransform);\r\n    var patternVNode = createVNode('pattern', '', patternAttrs, [child]);\r\n    var patternKey = vNodeToString(patternVNode);\r\n    var patternCache = scope.patternCache;\r\n    var patternId = patternCache[patternKey];\r\n    if (!patternId) {\r\n        patternId = scope.zrId + '-p' + scope.patternIdx++;\r\n        patternCache[patternKey] = patternId;\r\n        patternAttrs.id = patternId;\r\n        patternVNode = scope.defs[patternId] = createVNode('pattern', patternId, patternAttrs, [child]);\r\n    }\r\n    attrs[target] = getIdURL(patternId);\r\n}\r\nexport function setClipPath(clipPath, attrs, scope) {\r\n    var clipPathCache = scope.clipPathCache, defs = scope.defs;\r\n    var clipPathId = clipPathCache[clipPath.id];\r\n    if (!clipPathId) {\r\n        clipPathId = scope.zrId + '-c' + scope.clipPathIdx++;\r\n        var clipPathAttrs = {\r\n            id: clipPathId\r\n        };\r\n        clipPathCache[clipPath.id] = clipPathId;\r\n        defs[clipPathId] = createVNode('clipPath', clipPathId, clipPathAttrs, [brushSVGPath(clipPath, scope)]);\r\n    }\r\n    attrs['clip-path'] = getIdURL(clipPathId);\r\n}\r\n", "export function createTextNode(text) {\r\n    return document.createTextNode(text);\r\n}\r\nexport function createComment(text) {\r\n    return document.createComment(text);\r\n}\r\nexport function insertBefore(parentNode, newNode, referenceNode) {\r\n    parentNode.insertBefore(newNode, referenceNode);\r\n}\r\nexport function removeChild(node, child) {\r\n    node.removeChild(child);\r\n}\r\nexport function appendChild(node, child) {\r\n    node.appendChild(child);\r\n}\r\nexport function parentNode(node) {\r\n    return node.parentNode;\r\n}\r\nexport function nextSibling(node) {\r\n    return node.nextSibling;\r\n}\r\nexport function tagName(elm) {\r\n    return elm.tagName;\r\n}\r\nexport function setTextContent(node, text) {\r\n    node.textContent = text;\r\n}\r\nexport function getTextContent(node) {\r\n    return node.textContent;\r\n}\r\nexport function isElement(node) {\r\n    return node.nodeType === 1;\r\n}\r\nexport function isText(node) {\r\n    return node.nodeType === 3;\r\n}\r\nexport function isComment(node) {\r\n    return node.nodeType === 8;\r\n}\r\n", "import { isArray, isObject } from '../core/util.js';\r\nimport { createElement, createVNode, XMLNS, XML_NAMESPACE, XLINKNS } from './core.js';\r\nimport * as api from './domapi.js';\r\nvar colonChar = 58;\r\nvar xChar = 120;\r\nvar emptyNode = createVNode('', '');\r\nfunction isUndef(s) {\r\n    return s === undefined;\r\n}\r\nfunction isDef(s) {\r\n    return s !== undefined;\r\n}\r\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\r\n    var map = {};\r\n    for (var i = beginIdx; i <= endIdx; ++i) {\r\n        var key = children[i].key;\r\n        if (key !== undefined) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                if (map[key] != null) {\r\n                    console.error(\"Duplicate key \" + key);\r\n                }\r\n            }\r\n            map[key] = i;\r\n        }\r\n    }\r\n    return map;\r\n}\r\nfunction sameVnode(vnode1, vnode2) {\r\n    var isSameKey = vnode1.key === vnode2.key;\r\n    var isSameTag = vnode1.tag === vnode2.tag;\r\n    return isSameTag && isSameKey;\r\n}\r\nfunction createElm(vnode) {\r\n    var i;\r\n    var children = vnode.children;\r\n    var tag = vnode.tag;\r\n    if (isDef(tag)) {\r\n        var elm = (vnode.elm = createElement(tag));\r\n        updateAttrs(emptyNode, vnode);\r\n        if (isArray(children)) {\r\n            for (i = 0; i < children.length; ++i) {\r\n                var ch = children[i];\r\n                if (ch != null) {\r\n                    api.appendChild(elm, createElm(ch));\r\n                }\r\n            }\r\n        }\r\n        else if (isDef(vnode.text) && !isObject(vnode.text)) {\r\n            api.appendChild(elm, api.createTextNode(vnode.text));\r\n        }\r\n    }\r\n    else {\r\n        vnode.elm = api.createTextNode(vnode.text);\r\n    }\r\n    return vnode.elm;\r\n}\r\nfunction addVnodes(parentElm, before, vnodes, startIdx, endIdx) {\r\n    for (; startIdx <= endIdx; ++startIdx) {\r\n        var ch = vnodes[startIdx];\r\n        if (ch != null) {\r\n            api.insertBefore(parentElm, createElm(ch), before);\r\n        }\r\n    }\r\n}\r\nfunction removeVnodes(parentElm, vnodes, startIdx, endIdx) {\r\n    for (; startIdx <= endIdx; ++startIdx) {\r\n        var ch = vnodes[startIdx];\r\n        if (ch != null) {\r\n            if (isDef(ch.tag)) {\r\n                var parent_1 = api.parentNode(ch.elm);\r\n                api.removeChild(parent_1, ch.elm);\r\n            }\r\n            else {\r\n                api.removeChild(parentElm, ch.elm);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function updateAttrs(oldVnode, vnode) {\r\n    var key;\r\n    var elm = vnode.elm;\r\n    var oldAttrs = oldVnode && oldVnode.attrs || {};\r\n    var attrs = vnode.attrs || {};\r\n    if (oldAttrs === attrs) {\r\n        return;\r\n    }\r\n    for (key in attrs) {\r\n        var cur = attrs[key];\r\n        var old = oldAttrs[key];\r\n        if (old !== cur) {\r\n            if (cur === true) {\r\n                elm.setAttribute(key, '');\r\n            }\r\n            else if (cur === false) {\r\n                elm.removeAttribute(key);\r\n            }\r\n            else {\r\n                if (key.charCodeAt(0) !== xChar) {\r\n                    elm.setAttribute(key, cur);\r\n                }\r\n                else if (key === 'xmlns:xlink' || key === 'xmlns') {\r\n                    elm.setAttributeNS(XMLNS, key, cur);\r\n                }\r\n                else if (key.charCodeAt(3) === colonChar) {\r\n                    elm.setAttributeNS(XML_NAMESPACE, key, cur);\r\n                }\r\n                else if (key.charCodeAt(5) === colonChar) {\r\n                    elm.setAttributeNS(XLINKNS, key, cur);\r\n                }\r\n                else {\r\n                    elm.setAttribute(key, cur);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for (key in oldAttrs) {\r\n        if (!(key in attrs)) {\r\n            elm.removeAttribute(key);\r\n        }\r\n    }\r\n}\r\nfunction updateChildren(parentElm, oldCh, newCh) {\r\n    var oldStartIdx = 0;\r\n    var newStartIdx = 0;\r\n    var oldEndIdx = oldCh.length - 1;\r\n    var oldStartVnode = oldCh[0];\r\n    var oldEndVnode = oldCh[oldEndIdx];\r\n    var newEndIdx = newCh.length - 1;\r\n    var newStartVnode = newCh[0];\r\n    var newEndVnode = newCh[newEndIdx];\r\n    var oldKeyToIdx;\r\n    var idxInOld;\r\n    var elmToMove;\r\n    var before;\r\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\r\n        if (oldStartVnode == null) {\r\n            oldStartVnode = oldCh[++oldStartIdx];\r\n        }\r\n        else if (oldEndVnode == null) {\r\n            oldEndVnode = oldCh[--oldEndIdx];\r\n        }\r\n        else if (newStartVnode == null) {\r\n            newStartVnode = newCh[++newStartIdx];\r\n        }\r\n        else if (newEndVnode == null) {\r\n            newEndVnode = newCh[--newEndIdx];\r\n        }\r\n        else if (sameVnode(oldStartVnode, newStartVnode)) {\r\n            patchVnode(oldStartVnode, newStartVnode);\r\n            oldStartVnode = oldCh[++oldStartIdx];\r\n            newStartVnode = newCh[++newStartIdx];\r\n        }\r\n        else if (sameVnode(oldEndVnode, newEndVnode)) {\r\n            patchVnode(oldEndVnode, newEndVnode);\r\n            oldEndVnode = oldCh[--oldEndIdx];\r\n            newEndVnode = newCh[--newEndIdx];\r\n        }\r\n        else if (sameVnode(oldStartVnode, newEndVnode)) {\r\n            patchVnode(oldStartVnode, newEndVnode);\r\n            api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));\r\n            oldStartVnode = oldCh[++oldStartIdx];\r\n            newEndVnode = newCh[--newEndIdx];\r\n        }\r\n        else if (sameVnode(oldEndVnode, newStartVnode)) {\r\n            patchVnode(oldEndVnode, newStartVnode);\r\n            api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\r\n            oldEndVnode = oldCh[--oldEndIdx];\r\n            newStartVnode = newCh[++newStartIdx];\r\n        }\r\n        else {\r\n            if (isUndef(oldKeyToIdx)) {\r\n                oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\r\n            }\r\n            idxInOld = oldKeyToIdx[newStartVnode.key];\r\n            if (isUndef(idxInOld)) {\r\n                api.insertBefore(parentElm, createElm(newStartVnode), oldStartVnode.elm);\r\n            }\r\n            else {\r\n                elmToMove = oldCh[idxInOld];\r\n                if (elmToMove.tag !== newStartVnode.tag) {\r\n                    api.insertBefore(parentElm, createElm(newStartVnode), oldStartVnode.elm);\r\n                }\r\n                else {\r\n                    patchVnode(elmToMove, newStartVnode);\r\n                    oldCh[idxInOld] = undefined;\r\n                    api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\r\n                }\r\n            }\r\n            newStartVnode = newCh[++newStartIdx];\r\n        }\r\n    }\r\n    if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\r\n        if (oldStartIdx > oldEndIdx) {\r\n            before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\r\n            addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx);\r\n        }\r\n        else {\r\n            removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\r\n        }\r\n    }\r\n}\r\nfunction patchVnode(oldVnode, vnode) {\r\n    var elm = (vnode.elm = oldVnode.elm);\r\n    var oldCh = oldVnode.children;\r\n    var ch = vnode.children;\r\n    if (oldVnode === vnode) {\r\n        return;\r\n    }\r\n    updateAttrs(oldVnode, vnode);\r\n    if (isUndef(vnode.text)) {\r\n        if (isDef(oldCh) && isDef(ch)) {\r\n            if (oldCh !== ch) {\r\n                updateChildren(elm, oldCh, ch);\r\n            }\r\n        }\r\n        else if (isDef(ch)) {\r\n            if (isDef(oldVnode.text)) {\r\n                api.setTextContent(elm, '');\r\n            }\r\n            addVnodes(elm, null, ch, 0, ch.length - 1);\r\n        }\r\n        else if (isDef(oldCh)) {\r\n            removeVnodes(elm, oldCh, 0, oldCh.length - 1);\r\n        }\r\n        else if (isDef(oldVnode.text)) {\r\n            api.setTextContent(elm, '');\r\n        }\r\n    }\r\n    else if (oldVnode.text !== vnode.text) {\r\n        if (isDef(oldCh)) {\r\n            removeVnodes(elm, oldCh, 0, oldCh.length - 1);\r\n        }\r\n        api.setTextContent(elm, vnode.text);\r\n    }\r\n}\r\nexport default function patch(oldVnode, vnode) {\r\n    if (sameVnode(oldVnode, vnode)) {\r\n        patchVnode(oldVnode, vnode);\r\n    }\r\n    else {\r\n        var elm = oldVnode.elm;\r\n        var parent_2 = api.parentNode(elm);\r\n        createElm(vnode);\r\n        if (parent_2 !== null) {\r\n            api.insertBefore(parent_2, vnode.elm, api.nextSibling(elm));\r\n            removeVnodes(parent_2, [oldVnode], 0, 0);\r\n        }\r\n    }\r\n    return vnode;\r\n}\r\n", "import { brush, setClipPath, setGradient, setPattern } from './graphic.js';\r\nimport { createElement, createVNode, vNodeToString, getCssString, createBrushScope, createSVGVNode } from './core.js';\r\nimport { normalizeColor, encodeBase64, isGradient, isPattern } from './helper.js';\r\nimport { extend, keys, logError, map, noop, retrieve2 } from '../core/util.js';\r\nimport patch, { updateAttrs } from './patch.js';\r\nimport { getSize } from '../canvas/helper.js';\r\nvar svgId = 0;\r\nvar SVGPainter = (function () {\r\n    function SVGPainter(root, storage, opts) {\r\n        this.type = 'svg';\r\n        this.refreshHover = createMethodNotSupport('refreshHover');\r\n        this.configLayer = createMethodNotSupport('configLayer');\r\n        this.storage = storage;\r\n        this._opts = opts = extend({}, opts);\r\n        this.root = root;\r\n        this._id = 'zr' + svgId++;\r\n        this._oldVNode = createSVGVNode(opts.width, opts.height);\r\n        if (root && !opts.ssr) {\r\n            var viewport = this._viewport = document.createElement('div');\r\n            viewport.style.cssText = 'position:relative;overflow:hidden';\r\n            var svgDom = this._svgDom = this._oldVNode.elm = createElement('svg');\r\n            updateAttrs(null, this._oldVNode);\r\n            viewport.appendChild(svgDom);\r\n            root.appendChild(viewport);\r\n        }\r\n        this.resize(opts.width, opts.height);\r\n    }\r\n    SVGPainter.prototype.getType = function () {\r\n        return this.type;\r\n    };\r\n    SVGPainter.prototype.getViewportRoot = function () {\r\n        return this._viewport;\r\n    };\r\n    SVGPainter.prototype.getViewportRootOffset = function () {\r\n        var viewportRoot = this.getViewportRoot();\r\n        if (viewportRoot) {\r\n            return {\r\n                offsetLeft: viewportRoot.offsetLeft || 0,\r\n                offsetTop: viewportRoot.offsetTop || 0\r\n            };\r\n        }\r\n    };\r\n    SVGPainter.prototype.getSvgDom = function () {\r\n        return this._svgDom;\r\n    };\r\n    SVGPainter.prototype.refresh = function () {\r\n        if (this.root) {\r\n            var vnode = this.renderToVNode({\r\n                willUpdate: true\r\n            });\r\n            vnode.attrs.style = 'position:absolute;left:0;top:0;user-select:none';\r\n            patch(this._oldVNode, vnode);\r\n            this._oldVNode = vnode;\r\n        }\r\n    };\r\n    SVGPainter.prototype.renderOneToVNode = function (el) {\r\n        return brush(el, createBrushScope(this._id));\r\n    };\r\n    SVGPainter.prototype.renderToVNode = function (opts) {\r\n        opts = opts || {};\r\n        var list = this.storage.getDisplayList(true);\r\n        var width = this._width;\r\n        var height = this._height;\r\n        var scope = createBrushScope(this._id);\r\n        scope.animation = opts.animation;\r\n        scope.willUpdate = opts.willUpdate;\r\n        scope.compress = opts.compress;\r\n        var children = [];\r\n        var bgVNode = this._bgVNode = createBackgroundVNode(width, height, this._backgroundColor, scope);\r\n        bgVNode && children.push(bgVNode);\r\n        var mainVNode = !opts.compress\r\n            ? (this._mainVNode = createVNode('g', 'main', {}, [])) : null;\r\n        this._paintList(list, scope, mainVNode ? mainVNode.children : children);\r\n        mainVNode && children.push(mainVNode);\r\n        var defs = map(keys(scope.defs), function (id) { return scope.defs[id]; });\r\n        if (defs.length) {\r\n            children.push(createVNode('defs', 'defs', {}, defs));\r\n        }\r\n        if (opts.animation) {\r\n            var animationCssStr = getCssString(scope.cssNodes, scope.cssAnims, { newline: true });\r\n            if (animationCssStr) {\r\n                var styleNode = createVNode('style', 'stl', {}, [], animationCssStr);\r\n                children.push(styleNode);\r\n            }\r\n        }\r\n        return createSVGVNode(width, height, children, opts.useViewBox);\r\n    };\r\n    SVGPainter.prototype.renderToString = function (opts) {\r\n        opts = opts || {};\r\n        return vNodeToString(this.renderToVNode({\r\n            animation: retrieve2(opts.cssAnimation, true),\r\n            willUpdate: false,\r\n            compress: true,\r\n            useViewBox: retrieve2(opts.useViewBox, true)\r\n        }), { newline: true });\r\n    };\r\n    SVGPainter.prototype.setBackgroundColor = function (backgroundColor) {\r\n        this._backgroundColor = backgroundColor;\r\n    };\r\n    SVGPainter.prototype.getSvgRoot = function () {\r\n        return this._mainVNode && this._mainVNode.elm;\r\n    };\r\n    SVGPainter.prototype._paintList = function (list, scope, out) {\r\n        var listLen = list.length;\r\n        var clipPathsGroupsStack = [];\r\n        var clipPathsGroupsStackDepth = 0;\r\n        var currentClipPathGroup;\r\n        var prevClipPaths;\r\n        var clipGroupNodeIdx = 0;\r\n        for (var i = 0; i < listLen; i++) {\r\n            var displayable = list[i];\r\n            if (!displayable.invisible) {\r\n                var clipPaths = displayable.__clipPaths;\r\n                var len = clipPaths && clipPaths.length || 0;\r\n                var prevLen = prevClipPaths && prevClipPaths.length || 0;\r\n                var lca = void 0;\r\n                for (lca = Math.max(len - 1, prevLen - 1); lca >= 0; lca--) {\r\n                    if (clipPaths && prevClipPaths\r\n                        && clipPaths[lca] === prevClipPaths[lca]) {\r\n                        break;\r\n                    }\r\n                }\r\n                for (var i_1 = prevLen - 1; i_1 > lca; i_1--) {\r\n                    clipPathsGroupsStackDepth--;\r\n                    currentClipPathGroup = clipPathsGroupsStack[clipPathsGroupsStackDepth - 1];\r\n                }\r\n                for (var i_2 = lca + 1; i_2 < len; i_2++) {\r\n                    var groupAttrs = {};\r\n                    setClipPath(clipPaths[i_2], groupAttrs, scope);\r\n                    var g = createVNode('g', 'clip-g-' + clipGroupNodeIdx++, groupAttrs, []);\r\n                    (currentClipPathGroup ? currentClipPathGroup.children : out).push(g);\r\n                    clipPathsGroupsStack[clipPathsGroupsStackDepth++] = g;\r\n                    currentClipPathGroup = g;\r\n                }\r\n                prevClipPaths = clipPaths;\r\n                var ret = brush(displayable, scope);\r\n                if (ret) {\r\n                    (currentClipPathGroup ? currentClipPathGroup.children : out).push(ret);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    SVGPainter.prototype.resize = function (width, height) {\r\n        var opts = this._opts;\r\n        var root = this.root;\r\n        var viewport = this._viewport;\r\n        width != null && (opts.width = width);\r\n        height != null && (opts.height = height);\r\n        if (root && viewport) {\r\n            viewport.style.display = 'none';\r\n            width = getSize(root, 0, opts);\r\n            height = getSize(root, 1, opts);\r\n            viewport.style.display = '';\r\n        }\r\n        if (this._width !== width || this._height !== height) {\r\n            this._width = width;\r\n            this._height = height;\r\n            if (viewport) {\r\n                var viewportStyle = viewport.style;\r\n                viewportStyle.width = width + 'px';\r\n                viewportStyle.height = height + 'px';\r\n            }\r\n            if (!isPattern(this._backgroundColor)) {\r\n                var svgDom = this._svgDom;\r\n                if (svgDom) {\r\n                    svgDom.setAttribute('width', width);\r\n                    svgDom.setAttribute('height', height);\r\n                }\r\n                var bgEl = this._bgVNode && this._bgVNode.elm;\r\n                if (bgEl) {\r\n                    bgEl.setAttribute('width', width);\r\n                    bgEl.setAttribute('height', height);\r\n                }\r\n            }\r\n            else {\r\n                this.refresh();\r\n            }\r\n        }\r\n    };\r\n    SVGPainter.prototype.getWidth = function () {\r\n        return this._width;\r\n    };\r\n    SVGPainter.prototype.getHeight = function () {\r\n        return this._height;\r\n    };\r\n    SVGPainter.prototype.dispose = function () {\r\n        if (this.root) {\r\n            this.root.innerHTML = '';\r\n        }\r\n        this._svgDom =\r\n            this._viewport =\r\n                this.storage =\r\n                    this._oldVNode =\r\n                        this._bgVNode =\r\n                            this._mainVNode = null;\r\n    };\r\n    SVGPainter.prototype.clear = function () {\r\n        if (this._svgDom) {\r\n            this._svgDom.innerHTML = null;\r\n        }\r\n        this._oldVNode = null;\r\n    };\r\n    SVGPainter.prototype.toDataURL = function (base64) {\r\n        var str = this.renderToString();\r\n        var prefix = 'data:image/svg+xml;';\r\n        if (base64) {\r\n            str = encodeBase64(str);\r\n            return str && prefix + 'base64,' + str;\r\n        }\r\n        return prefix + 'charset=UTF-8,' + encodeURIComponent(str);\r\n    };\r\n    return SVGPainter;\r\n}());\r\nfunction createMethodNotSupport(method) {\r\n    return function () {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            logError('In SVG mode painter not support method \"' + method + '\"');\r\n        }\r\n    };\r\n}\r\nfunction createBackgroundVNode(width, height, backgroundColor, scope) {\r\n    var bgVNode;\r\n    if (backgroundColor && backgroundColor !== 'none') {\r\n        bgVNode = createVNode('rect', 'bg', {\r\n            width: width,\r\n            height: height,\r\n            x: '0',\r\n            y: '0',\r\n            id: '0'\r\n        });\r\n        if (isGradient(backgroundColor)) {\r\n            setGradient({ fill: backgroundColor }, bgVNode.attrs, 'fill', scope);\r\n        }\r\n        else if (isPattern(backgroundColor)) {\r\n            setPattern({\r\n                style: {\r\n                    fill: backgroundColor\r\n                },\r\n                dirty: noop,\r\n                getBoundingRect: function () { return ({ width: width, height: height }); }\r\n            }, bgVNode.attrs, 'fill', scope);\r\n        }\r\n        else {\r\n            var _a = normalizeColor(backgroundColor), color = _a.color, opacity = _a.opacity;\r\n            bgVNode.attrs.fill = color;\r\n            opacity < 1 && (bgVNode.attrs['fill-opacity'] = opacity);\r\n        }\r\n    }\r\n    return bgVNode;\r\n}\r\nexport default SVGPainter;\r\n", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport SVGPainter from 'zrender/lib/svg/Painter.js';\r\nexport function install(registers) {\r\n  registers.registerPainter('svg', SVGPainter);\r\n}", "import { __extends } from \"tslib\";\r\nimport * as util from '../core/util.js';\r\nimport { devicePixelRatio } from '../config.js';\r\nimport Eventful from '../core/Eventful.js';\r\nimport { getCanvasGradient } from './helper.js';\r\nimport { createCanvasPattern } from './graphic.js';\r\nimport BoundingRect from '../core/BoundingRect.js';\r\nimport { REDRAW_BIT } from '../graphic/constants.js';\r\nimport { platformApi } from '../core/platform.js';\r\nfunction createDom(id, painter, dpr) {\r\n    var newDom = platformApi.createCanvas();\r\n    var width = painter.getWidth();\r\n    var height = painter.getHeight();\r\n    var newDomStyle = newDom.style;\r\n    if (newDomStyle) {\r\n        newDomStyle.position = 'absolute';\r\n        newDomStyle.left = '0';\r\n        newDomStyle.top = '0';\r\n        newDomStyle.width = width + 'px';\r\n        newDomStyle.height = height + 'px';\r\n        newDom.setAttribute('data-zr-dom-id', id);\r\n    }\r\n    newDom.width = width * dpr;\r\n    newDom.height = height * dpr;\r\n    return newDom;\r\n}\r\n;\r\nvar Layer = (function (_super) {\r\n    __extends(Layer, _super);\r\n    function Layer(id, painter, dpr) {\r\n        var _this = _super.call(this) || this;\r\n        _this.motionBlur = false;\r\n        _this.lastFrameAlpha = 0.7;\r\n        _this.dpr = 1;\r\n        _this.virtual = false;\r\n        _this.config = {};\r\n        _this.incremental = false;\r\n        _this.zlevel = 0;\r\n        _this.maxRepaintRectCount = 5;\r\n        _this.__dirty = true;\r\n        _this.__firstTimePaint = true;\r\n        _this.__used = false;\r\n        _this.__drawIndex = 0;\r\n        _this.__startIndex = 0;\r\n        _this.__endIndex = 0;\r\n        _this.__prevStartIndex = null;\r\n        _this.__prevEndIndex = null;\r\n        var dom;\r\n        dpr = dpr || devicePixelRatio;\r\n        if (typeof id === 'string') {\r\n            dom = createDom(id, painter, dpr);\r\n        }\r\n        else if (util.isObject(id)) {\r\n            dom = id;\r\n            id = dom.id;\r\n        }\r\n        _this.id = id;\r\n        _this.dom = dom;\r\n        var domStyle = dom.style;\r\n        if (domStyle) {\r\n            util.disableUserSelect(dom);\r\n            dom.onselectstart = function () { return false; };\r\n            domStyle.padding = '0';\r\n            domStyle.margin = '0';\r\n            domStyle.borderWidth = '0';\r\n        }\r\n        _this.painter = painter;\r\n        _this.dpr = dpr;\r\n        return _this;\r\n    }\r\n    Layer.prototype.getElementCount = function () {\r\n        return this.__endIndex - this.__startIndex;\r\n    };\r\n    Layer.prototype.afterBrush = function () {\r\n        this.__prevStartIndex = this.__startIndex;\r\n        this.__prevEndIndex = this.__endIndex;\r\n    };\r\n    Layer.prototype.initContext = function () {\r\n        this.ctx = this.dom.getContext('2d');\r\n        this.ctx.dpr = this.dpr;\r\n    };\r\n    Layer.prototype.setUnpainted = function () {\r\n        this.__firstTimePaint = true;\r\n    };\r\n    Layer.prototype.createBackBuffer = function () {\r\n        var dpr = this.dpr;\r\n        this.domBack = createDom('back-' + this.id, this.painter, dpr);\r\n        this.ctxBack = this.domBack.getContext('2d');\r\n        if (dpr !== 1) {\r\n            this.ctxBack.scale(dpr, dpr);\r\n        }\r\n    };\r\n    Layer.prototype.createRepaintRects = function (displayList, prevList, viewWidth, viewHeight) {\r\n        if (this.__firstTimePaint) {\r\n            this.__firstTimePaint = false;\r\n            return null;\r\n        }\r\n        var mergedRepaintRects = [];\r\n        var maxRepaintRectCount = this.maxRepaintRectCount;\r\n        var full = false;\r\n        var pendingRect = new BoundingRect(0, 0, 0, 0);\r\n        function addRectToMergePool(rect) {\r\n            if (!rect.isFinite() || rect.isZero()) {\r\n                return;\r\n            }\r\n            if (mergedRepaintRects.length === 0) {\r\n                var boundingRect = new BoundingRect(0, 0, 0, 0);\r\n                boundingRect.copy(rect);\r\n                mergedRepaintRects.push(boundingRect);\r\n            }\r\n            else {\r\n                var isMerged = false;\r\n                var minDeltaArea = Infinity;\r\n                var bestRectToMergeIdx = 0;\r\n                for (var i = 0; i < mergedRepaintRects.length; ++i) {\r\n                    var mergedRect = mergedRepaintRects[i];\r\n                    if (mergedRect.intersect(rect)) {\r\n                        var pendingRect_1 = new BoundingRect(0, 0, 0, 0);\r\n                        pendingRect_1.copy(mergedRect);\r\n                        pendingRect_1.union(rect);\r\n                        mergedRepaintRects[i] = pendingRect_1;\r\n                        isMerged = true;\r\n                        break;\r\n                    }\r\n                    else if (full) {\r\n                        pendingRect.copy(rect);\r\n                        pendingRect.union(mergedRect);\r\n                        var aArea = rect.width * rect.height;\r\n                        var bArea = mergedRect.width * mergedRect.height;\r\n                        var pendingArea = pendingRect.width * pendingRect.height;\r\n                        var deltaArea = pendingArea - aArea - bArea;\r\n                        if (deltaArea < minDeltaArea) {\r\n                            minDeltaArea = deltaArea;\r\n                            bestRectToMergeIdx = i;\r\n                        }\r\n                    }\r\n                }\r\n                if (full) {\r\n                    mergedRepaintRects[bestRectToMergeIdx].union(rect);\r\n                    isMerged = true;\r\n                }\r\n                if (!isMerged) {\r\n                    var boundingRect = new BoundingRect(0, 0, 0, 0);\r\n                    boundingRect.copy(rect);\r\n                    mergedRepaintRects.push(boundingRect);\r\n                }\r\n                if (!full) {\r\n                    full = mergedRepaintRects.length >= maxRepaintRectCount;\r\n                }\r\n            }\r\n        }\r\n        for (var i = this.__startIndex; i < this.__endIndex; ++i) {\r\n            var el = displayList[i];\r\n            if (el) {\r\n                var shouldPaint = el.shouldBePainted(viewWidth, viewHeight, true, true);\r\n                var prevRect = el.__isRendered && ((el.__dirty & REDRAW_BIT) || !shouldPaint)\r\n                    ? el.getPrevPaintRect()\r\n                    : null;\r\n                if (prevRect) {\r\n                    addRectToMergePool(prevRect);\r\n                }\r\n                var curRect = shouldPaint && ((el.__dirty & REDRAW_BIT) || !el.__isRendered)\r\n                    ? el.getPaintRect()\r\n                    : null;\r\n                if (curRect) {\r\n                    addRectToMergePool(curRect);\r\n                }\r\n            }\r\n        }\r\n        for (var i = this.__prevStartIndex; i < this.__prevEndIndex; ++i) {\r\n            var el = prevList[i];\r\n            var shouldPaint = el.shouldBePainted(viewWidth, viewHeight, true, true);\r\n            if (el && (!shouldPaint || !el.__zr) && el.__isRendered) {\r\n                var prevRect = el.getPrevPaintRect();\r\n                if (prevRect) {\r\n                    addRectToMergePool(prevRect);\r\n                }\r\n            }\r\n        }\r\n        var hasIntersections;\r\n        do {\r\n            hasIntersections = false;\r\n            for (var i = 0; i < mergedRepaintRects.length;) {\r\n                if (mergedRepaintRects[i].isZero()) {\r\n                    mergedRepaintRects.splice(i, 1);\r\n                    continue;\r\n                }\r\n                for (var j = i + 1; j < mergedRepaintRects.length;) {\r\n                    if (mergedRepaintRects[i].intersect(mergedRepaintRects[j])) {\r\n                        hasIntersections = true;\r\n                        mergedRepaintRects[i].union(mergedRepaintRects[j]);\r\n                        mergedRepaintRects.splice(j, 1);\r\n                    }\r\n                    else {\r\n                        j++;\r\n                    }\r\n                }\r\n                i++;\r\n            }\r\n        } while (hasIntersections);\r\n        this._paintRects = mergedRepaintRects;\r\n        return mergedRepaintRects;\r\n    };\r\n    Layer.prototype.debugGetPaintRects = function () {\r\n        return (this._paintRects || []).slice();\r\n    };\r\n    Layer.prototype.resize = function (width, height) {\r\n        var dpr = this.dpr;\r\n        var dom = this.dom;\r\n        var domStyle = dom.style;\r\n        var domBack = this.domBack;\r\n        if (domStyle) {\r\n            domStyle.width = width + 'px';\r\n            domStyle.height = height + 'px';\r\n        }\r\n        dom.width = width * dpr;\r\n        dom.height = height * dpr;\r\n        if (domBack) {\r\n            domBack.width = width * dpr;\r\n            domBack.height = height * dpr;\r\n            if (dpr !== 1) {\r\n                this.ctxBack.scale(dpr, dpr);\r\n            }\r\n        }\r\n    };\r\n    Layer.prototype.clear = function (clearAll, clearColor, repaintRects) {\r\n        var dom = this.dom;\r\n        var ctx = this.ctx;\r\n        var width = dom.width;\r\n        var height = dom.height;\r\n        clearColor = clearColor || this.clearColor;\r\n        var haveMotionBLur = this.motionBlur && !clearAll;\r\n        var lastFrameAlpha = this.lastFrameAlpha;\r\n        var dpr = this.dpr;\r\n        var self = this;\r\n        if (haveMotionBLur) {\r\n            if (!this.domBack) {\r\n                this.createBackBuffer();\r\n            }\r\n            this.ctxBack.globalCompositeOperation = 'copy';\r\n            this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\r\n        }\r\n        var domBack = this.domBack;\r\n        function doClear(x, y, width, height) {\r\n            ctx.clearRect(x, y, width, height);\r\n            if (clearColor && clearColor !== 'transparent') {\r\n                var clearColorGradientOrPattern = void 0;\r\n                if (util.isGradientObject(clearColor)) {\r\n                    var shouldCache = clearColor.global || (clearColor.__width === width\r\n                        && clearColor.__height === height);\r\n                    clearColorGradientOrPattern = shouldCache\r\n                        && clearColor.__canvasGradient\r\n                        || getCanvasGradient(ctx, clearColor, {\r\n                            x: 0,\r\n                            y: 0,\r\n                            width: width,\r\n                            height: height\r\n                        });\r\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\r\n                    clearColor.__width = width;\r\n                    clearColor.__height = height;\r\n                }\r\n                else if (util.isImagePatternObject(clearColor)) {\r\n                    clearColor.scaleX = clearColor.scaleX || dpr;\r\n                    clearColor.scaleY = clearColor.scaleY || dpr;\r\n                    clearColorGradientOrPattern = createCanvasPattern(ctx, clearColor, {\r\n                        dirty: function () {\r\n                            self.setUnpainted();\r\n                            self.__painter.refresh();\r\n                        }\r\n                    });\r\n                }\r\n                ctx.save();\r\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\r\n                ctx.fillRect(x, y, width, height);\r\n                ctx.restore();\r\n            }\r\n            if (haveMotionBLur) {\r\n                ctx.save();\r\n                ctx.globalAlpha = lastFrameAlpha;\r\n                ctx.drawImage(domBack, x, y, width, height);\r\n                ctx.restore();\r\n            }\r\n        }\r\n        ;\r\n        if (!repaintRects || haveMotionBLur) {\r\n            doClear(0, 0, width, height);\r\n        }\r\n        else if (repaintRects.length) {\r\n            util.each(repaintRects, function (rect) {\r\n                doClear(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\r\n            });\r\n        }\r\n    };\r\n    return Layer;\r\n}(Eventful));\r\nexport default Layer;\r\n", "import { devicePixelRatio } from '../config.js';\r\nimport * as util from '../core/util.js';\r\nimport Layer from './Layer.js';\r\nimport requestAnimationFrame from '../animation/requestAnimationFrame.js';\r\nimport env from '../core/env.js';\r\nimport { brush, brushSingle } from './graphic.js';\r\nimport { REDRAW_BIT } from '../graphic/constants.js';\r\nimport { getSize } from './helper.js';\r\nvar HOVER_LAYER_ZLEVEL = 1e5;\r\nvar CANVAS_ZLEVEL = 314159;\r\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\r\nvar INCREMENTAL_INC = 0.001;\r\nfunction isLayerValid(layer) {\r\n    if (!layer) {\r\n        return false;\r\n    }\r\n    if (layer.__builtin__) {\r\n        return true;\r\n    }\r\n    if (typeof (layer.resize) !== 'function'\r\n        || typeof (layer.refresh) !== 'function') {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction createRoot(width, height) {\r\n    var domRoot = document.createElement('div');\r\n    domRoot.style.cssText = [\r\n        'position:relative',\r\n        'width:' + width + 'px',\r\n        'height:' + height + 'px',\r\n        'padding:0',\r\n        'margin:0',\r\n        'border-width:0'\r\n    ].join(';') + ';';\r\n    return domRoot;\r\n}\r\nvar CanvasPainter = (function () {\r\n    function CanvasPainter(root, storage, opts, id) {\r\n        this.type = 'canvas';\r\n        this._zlevelList = [];\r\n        this._prevDisplayList = [];\r\n        this._layers = {};\r\n        this._layerConfig = {};\r\n        this._needsManuallyCompositing = false;\r\n        this.type = 'canvas';\r\n        var singleCanvas = !root.nodeName\r\n            || root.nodeName.toUpperCase() === 'CANVAS';\r\n        this._opts = opts = util.extend({}, opts || {});\r\n        this.dpr = opts.devicePixelRatio || devicePixelRatio;\r\n        this._singleCanvas = singleCanvas;\r\n        this.root = root;\r\n        var rootStyle = root.style;\r\n        if (rootStyle) {\r\n            util.disableUserSelect(root);\r\n            root.innerHTML = '';\r\n        }\r\n        this.storage = storage;\r\n        var zlevelList = this._zlevelList;\r\n        this._prevDisplayList = [];\r\n        var layers = this._layers;\r\n        if (!singleCanvas) {\r\n            this._width = getSize(root, 0, opts);\r\n            this._height = getSize(root, 1, opts);\r\n            var domRoot = this._domRoot = createRoot(this._width, this._height);\r\n            root.appendChild(domRoot);\r\n        }\r\n        else {\r\n            var rootCanvas = root;\r\n            var width = rootCanvas.width;\r\n            var height = rootCanvas.height;\r\n            if (opts.width != null) {\r\n                width = opts.width;\r\n            }\r\n            if (opts.height != null) {\r\n                height = opts.height;\r\n            }\r\n            this.dpr = opts.devicePixelRatio || 1;\r\n            rootCanvas.width = width * this.dpr;\r\n            rootCanvas.height = height * this.dpr;\r\n            this._width = width;\r\n            this._height = height;\r\n            var mainLayer = new Layer(rootCanvas, this, this.dpr);\r\n            mainLayer.__builtin__ = true;\r\n            mainLayer.initContext();\r\n            layers[CANVAS_ZLEVEL] = mainLayer;\r\n            mainLayer.zlevel = CANVAS_ZLEVEL;\r\n            zlevelList.push(CANVAS_ZLEVEL);\r\n            this._domRoot = root;\r\n        }\r\n    }\r\n    CanvasPainter.prototype.getType = function () {\r\n        return 'canvas';\r\n    };\r\n    CanvasPainter.prototype.isSingleCanvas = function () {\r\n        return this._singleCanvas;\r\n    };\r\n    CanvasPainter.prototype.getViewportRoot = function () {\r\n        return this._domRoot;\r\n    };\r\n    CanvasPainter.prototype.getViewportRootOffset = function () {\r\n        var viewportRoot = this.getViewportRoot();\r\n        if (viewportRoot) {\r\n            return {\r\n                offsetLeft: viewportRoot.offsetLeft || 0,\r\n                offsetTop: viewportRoot.offsetTop || 0\r\n            };\r\n        }\r\n    };\r\n    CanvasPainter.prototype.refresh = function (paintAll) {\r\n        var list = this.storage.getDisplayList(true);\r\n        var prevList = this._prevDisplayList;\r\n        var zlevelList = this._zlevelList;\r\n        this._redrawId = Math.random();\r\n        this._paintList(list, prevList, paintAll, this._redrawId);\r\n        for (var i = 0; i < zlevelList.length; i++) {\r\n            var z = zlevelList[i];\r\n            var layer = this._layers[z];\r\n            if (!layer.__builtin__ && layer.refresh) {\r\n                var clearColor = i === 0 ? this._backgroundColor : null;\r\n                layer.refresh(clearColor);\r\n            }\r\n        }\r\n        if (this._opts.useDirtyRect) {\r\n            this._prevDisplayList = list.slice();\r\n        }\r\n        return this;\r\n    };\r\n    CanvasPainter.prototype.refreshHover = function () {\r\n        this._paintHoverList(this.storage.getDisplayList(false));\r\n    };\r\n    CanvasPainter.prototype._paintHoverList = function (list) {\r\n        var len = list.length;\r\n        var hoverLayer = this._hoverlayer;\r\n        hoverLayer && hoverLayer.clear();\r\n        if (!len) {\r\n            return;\r\n        }\r\n        var scope = {\r\n            inHover: true,\r\n            viewWidth: this._width,\r\n            viewHeight: this._height\r\n        };\r\n        var ctx;\r\n        for (var i = 0; i < len; i++) {\r\n            var el = list[i];\r\n            if (el.__inHover) {\r\n                if (!hoverLayer) {\r\n                    hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\r\n                }\r\n                if (!ctx) {\r\n                    ctx = hoverLayer.ctx;\r\n                    ctx.save();\r\n                }\r\n                brush(ctx, el, scope, i === len - 1);\r\n            }\r\n        }\r\n        if (ctx) {\r\n            ctx.restore();\r\n        }\r\n    };\r\n    CanvasPainter.prototype.getHoverLayer = function () {\r\n        return this.getLayer(HOVER_LAYER_ZLEVEL);\r\n    };\r\n    CanvasPainter.prototype.paintOne = function (ctx, el) {\r\n        brushSingle(ctx, el);\r\n    };\r\n    CanvasPainter.prototype._paintList = function (list, prevList, paintAll, redrawId) {\r\n        if (this._redrawId !== redrawId) {\r\n            return;\r\n        }\r\n        paintAll = paintAll || false;\r\n        this._updateLayerStatus(list);\r\n        var _a = this._doPaintList(list, prevList, paintAll), finished = _a.finished, needsRefreshHover = _a.needsRefreshHover;\r\n        if (this._needsManuallyCompositing) {\r\n            this._compositeManually();\r\n        }\r\n        if (needsRefreshHover) {\r\n            this._paintHoverList(list);\r\n        }\r\n        if (!finished) {\r\n            var self_1 = this;\r\n            requestAnimationFrame(function () {\r\n                self_1._paintList(list, prevList, paintAll, redrawId);\r\n            });\r\n        }\r\n        else {\r\n            this.eachLayer(function (layer) {\r\n                layer.afterBrush && layer.afterBrush();\r\n            });\r\n        }\r\n    };\r\n    CanvasPainter.prototype._compositeManually = function () {\r\n        var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\r\n        var width = this._domRoot.width;\r\n        var height = this._domRoot.height;\r\n        ctx.clearRect(0, 0, width, height);\r\n        this.eachBuiltinLayer(function (layer) {\r\n            if (layer.virtual) {\r\n                ctx.drawImage(layer.dom, 0, 0, width, height);\r\n            }\r\n        });\r\n    };\r\n    CanvasPainter.prototype._doPaintList = function (list, prevList, paintAll) {\r\n        var _this = this;\r\n        var layerList = [];\r\n        var useDirtyRect = this._opts.useDirtyRect;\r\n        for (var zi = 0; zi < this._zlevelList.length; zi++) {\r\n            var zlevel = this._zlevelList[zi];\r\n            var layer = this._layers[zlevel];\r\n            if (layer.__builtin__\r\n                && layer !== this._hoverlayer\r\n                && (layer.__dirty || paintAll)) {\r\n                layerList.push(layer);\r\n            }\r\n        }\r\n        var finished = true;\r\n        var needsRefreshHover = false;\r\n        var _loop_1 = function (k) {\r\n            var layer = layerList[k];\r\n            var ctx = layer.ctx;\r\n            var repaintRects = useDirtyRect\r\n                && layer.createRepaintRects(list, prevList, this_1._width, this_1._height);\r\n            var start = paintAll ? layer.__startIndex : layer.__drawIndex;\r\n            var useTimer = !paintAll && layer.incremental && Date.now;\r\n            var startTime = useTimer && Date.now();\r\n            var clearColor = layer.zlevel === this_1._zlevelList[0]\r\n                ? this_1._backgroundColor : null;\r\n            if (layer.__startIndex === layer.__endIndex) {\r\n                layer.clear(false, clearColor, repaintRects);\r\n            }\r\n            else if (start === layer.__startIndex) {\r\n                var firstEl = list[start];\r\n                if (!firstEl.incremental || !firstEl.notClear || paintAll) {\r\n                    layer.clear(false, clearColor, repaintRects);\r\n                }\r\n            }\r\n            if (start === -1) {\r\n                console.error('For some unknown reason. drawIndex is -1');\r\n                start = layer.__startIndex;\r\n            }\r\n            var i;\r\n            var repaint = function (repaintRect) {\r\n                var scope = {\r\n                    inHover: false,\r\n                    allClipped: false,\r\n                    prevEl: null,\r\n                    viewWidth: _this._width,\r\n                    viewHeight: _this._height\r\n                };\r\n                for (i = start; i < layer.__endIndex; i++) {\r\n                    var el = list[i];\r\n                    if (el.__inHover) {\r\n                        needsRefreshHover = true;\r\n                    }\r\n                    _this._doPaintEl(el, layer, useDirtyRect, repaintRect, scope, i === layer.__endIndex - 1);\r\n                    if (useTimer) {\r\n                        var dTime = Date.now() - startTime;\r\n                        if (dTime > 15) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (scope.prevElClipPaths) {\r\n                    ctx.restore();\r\n                }\r\n            };\r\n            if (repaintRects) {\r\n                if (repaintRects.length === 0) {\r\n                    i = layer.__endIndex;\r\n                }\r\n                else {\r\n                    var dpr = this_1.dpr;\r\n                    for (var r = 0; r < repaintRects.length; ++r) {\r\n                        var rect = repaintRects[r];\r\n                        ctx.save();\r\n                        ctx.beginPath();\r\n                        ctx.rect(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\r\n                        ctx.clip();\r\n                        repaint(rect);\r\n                        ctx.restore();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                ctx.save();\r\n                repaint();\r\n                ctx.restore();\r\n            }\r\n            layer.__drawIndex = i;\r\n            if (layer.__drawIndex < layer.__endIndex) {\r\n                finished = false;\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var k = 0; k < layerList.length; k++) {\r\n            _loop_1(k);\r\n        }\r\n        if (env.wxa) {\r\n            util.each(this._layers, function (layer) {\r\n                if (layer && layer.ctx && layer.ctx.draw) {\r\n                    layer.ctx.draw();\r\n                }\r\n            });\r\n        }\r\n        return {\r\n            finished: finished,\r\n            needsRefreshHover: needsRefreshHover\r\n        };\r\n    };\r\n    CanvasPainter.prototype._doPaintEl = function (el, currentLayer, useDirtyRect, repaintRect, scope, isLast) {\r\n        var ctx = currentLayer.ctx;\r\n        if (useDirtyRect) {\r\n            var paintRect = el.getPaintRect();\r\n            if (!repaintRect || paintRect && paintRect.intersect(repaintRect)) {\r\n                brush(ctx, el, scope, isLast);\r\n                el.setPrevPaintRect(paintRect);\r\n            }\r\n        }\r\n        else {\r\n            brush(ctx, el, scope, isLast);\r\n        }\r\n    };\r\n    CanvasPainter.prototype.getLayer = function (zlevel, virtual) {\r\n        if (this._singleCanvas && !this._needsManuallyCompositing) {\r\n            zlevel = CANVAS_ZLEVEL;\r\n        }\r\n        var layer = this._layers[zlevel];\r\n        if (!layer) {\r\n            layer = new Layer('zr_' + zlevel, this, this.dpr);\r\n            layer.zlevel = zlevel;\r\n            layer.__builtin__ = true;\r\n            if (this._layerConfig[zlevel]) {\r\n                util.merge(layer, this._layerConfig[zlevel], true);\r\n            }\r\n            else if (this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC]) {\r\n                util.merge(layer, this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC], true);\r\n            }\r\n            if (virtual) {\r\n                layer.virtual = virtual;\r\n            }\r\n            this.insertLayer(zlevel, layer);\r\n            layer.initContext();\r\n        }\r\n        return layer;\r\n    };\r\n    CanvasPainter.prototype.insertLayer = function (zlevel, layer) {\r\n        var layersMap = this._layers;\r\n        var zlevelList = this._zlevelList;\r\n        var len = zlevelList.length;\r\n        var domRoot = this._domRoot;\r\n        var prevLayer = null;\r\n        var i = -1;\r\n        if (layersMap[zlevel]) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                util.logError('ZLevel ' + zlevel + ' has been used already');\r\n            }\r\n            return;\r\n        }\r\n        if (!isLayerValid(layer)) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                util.logError('Layer of zlevel ' + zlevel + ' is not valid');\r\n            }\r\n            return;\r\n        }\r\n        if (len > 0 && zlevel > zlevelList[0]) {\r\n            for (i = 0; i < len - 1; i++) {\r\n                if (zlevelList[i] < zlevel\r\n                    && zlevelList[i + 1] > zlevel) {\r\n                    break;\r\n                }\r\n            }\r\n            prevLayer = layersMap[zlevelList[i]];\r\n        }\r\n        zlevelList.splice(i + 1, 0, zlevel);\r\n        layersMap[zlevel] = layer;\r\n        if (!layer.virtual) {\r\n            if (prevLayer) {\r\n                var prevDom = prevLayer.dom;\r\n                if (prevDom.nextSibling) {\r\n                    domRoot.insertBefore(layer.dom, prevDom.nextSibling);\r\n                }\r\n                else {\r\n                    domRoot.appendChild(layer.dom);\r\n                }\r\n            }\r\n            else {\r\n                if (domRoot.firstChild) {\r\n                    domRoot.insertBefore(layer.dom, domRoot.firstChild);\r\n                }\r\n                else {\r\n                    domRoot.appendChild(layer.dom);\r\n                }\r\n            }\r\n        }\r\n        layer.__painter = this;\r\n    };\r\n    CanvasPainter.prototype.eachLayer = function (cb, context) {\r\n        var zlevelList = this._zlevelList;\r\n        for (var i = 0; i < zlevelList.length; i++) {\r\n            var z = zlevelList[i];\r\n            cb.call(context, this._layers[z], z);\r\n        }\r\n    };\r\n    CanvasPainter.prototype.eachBuiltinLayer = function (cb, context) {\r\n        var zlevelList = this._zlevelList;\r\n        for (var i = 0; i < zlevelList.length; i++) {\r\n            var z = zlevelList[i];\r\n            var layer = this._layers[z];\r\n            if (layer.__builtin__) {\r\n                cb.call(context, layer, z);\r\n            }\r\n        }\r\n    };\r\n    CanvasPainter.prototype.eachOtherLayer = function (cb, context) {\r\n        var zlevelList = this._zlevelList;\r\n        for (var i = 0; i < zlevelList.length; i++) {\r\n            var z = zlevelList[i];\r\n            var layer = this._layers[z];\r\n            if (!layer.__builtin__) {\r\n                cb.call(context, layer, z);\r\n            }\r\n        }\r\n    };\r\n    CanvasPainter.prototype.getLayers = function () {\r\n        return this._layers;\r\n    };\r\n    CanvasPainter.prototype._updateLayerStatus = function (list) {\r\n        this.eachBuiltinLayer(function (layer, z) {\r\n            layer.__dirty = layer.__used = false;\r\n        });\r\n        function updatePrevLayer(idx) {\r\n            if (prevLayer) {\r\n                if (prevLayer.__endIndex !== idx) {\r\n                    prevLayer.__dirty = true;\r\n                }\r\n                prevLayer.__endIndex = idx;\r\n            }\r\n        }\r\n        if (this._singleCanvas) {\r\n            for (var i_1 = 1; i_1 < list.length; i_1++) {\r\n                var el = list[i_1];\r\n                if (el.zlevel !== list[i_1 - 1].zlevel || el.incremental) {\r\n                    this._needsManuallyCompositing = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        var prevLayer = null;\r\n        var incrementalLayerCount = 0;\r\n        var prevZlevel;\r\n        var i;\r\n        for (i = 0; i < list.length; i++) {\r\n            var el = list[i];\r\n            var zlevel = el.zlevel;\r\n            var layer = void 0;\r\n            if (prevZlevel !== zlevel) {\r\n                prevZlevel = zlevel;\r\n                incrementalLayerCount = 0;\r\n            }\r\n            if (el.incremental) {\r\n                layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\r\n                layer.incremental = true;\r\n                incrementalLayerCount = 1;\r\n            }\r\n            else {\r\n                layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\r\n            }\r\n            if (!layer.__builtin__) {\r\n                util.logError('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\r\n            }\r\n            if (layer !== prevLayer) {\r\n                layer.__used = true;\r\n                if (layer.__startIndex !== i) {\r\n                    layer.__dirty = true;\r\n                }\r\n                layer.__startIndex = i;\r\n                if (!layer.incremental) {\r\n                    layer.__drawIndex = i;\r\n                }\r\n                else {\r\n                    layer.__drawIndex = -1;\r\n                }\r\n                updatePrevLayer(i);\r\n                prevLayer = layer;\r\n            }\r\n            if ((el.__dirty & REDRAW_BIT) && !el.__inHover) {\r\n                layer.__dirty = true;\r\n                if (layer.incremental && layer.__drawIndex < 0) {\r\n                    layer.__drawIndex = i;\r\n                }\r\n            }\r\n        }\r\n        updatePrevLayer(i);\r\n        this.eachBuiltinLayer(function (layer, z) {\r\n            if (!layer.__used && layer.getElementCount() > 0) {\r\n                layer.__dirty = true;\r\n                layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\r\n            }\r\n            if (layer.__dirty && layer.__drawIndex < 0) {\r\n                layer.__drawIndex = layer.__startIndex;\r\n            }\r\n        });\r\n    };\r\n    CanvasPainter.prototype.clear = function () {\r\n        this.eachBuiltinLayer(this._clearLayer);\r\n        return this;\r\n    };\r\n    CanvasPainter.prototype._clearLayer = function (layer) {\r\n        layer.clear();\r\n    };\r\n    CanvasPainter.prototype.setBackgroundColor = function (backgroundColor) {\r\n        this._backgroundColor = backgroundColor;\r\n        util.each(this._layers, function (layer) {\r\n            layer.setUnpainted();\r\n        });\r\n    };\r\n    CanvasPainter.prototype.configLayer = function (zlevel, config) {\r\n        if (config) {\r\n            var layerConfig = this._layerConfig;\r\n            if (!layerConfig[zlevel]) {\r\n                layerConfig[zlevel] = config;\r\n            }\r\n            else {\r\n                util.merge(layerConfig[zlevel], config, true);\r\n            }\r\n            for (var i = 0; i < this._zlevelList.length; i++) {\r\n                var _zlevel = this._zlevelList[i];\r\n                if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\r\n                    var layer = this._layers[_zlevel];\r\n                    util.merge(layer, layerConfig[zlevel], true);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CanvasPainter.prototype.delLayer = function (zlevel) {\r\n        var layers = this._layers;\r\n        var zlevelList = this._zlevelList;\r\n        var layer = layers[zlevel];\r\n        if (!layer) {\r\n            return;\r\n        }\r\n        layer.dom.parentNode.removeChild(layer.dom);\r\n        delete layers[zlevel];\r\n        zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\r\n    };\r\n    CanvasPainter.prototype.resize = function (width, height) {\r\n        if (!this._domRoot.style) {\r\n            if (width == null || height == null) {\r\n                return;\r\n            }\r\n            this._width = width;\r\n            this._height = height;\r\n            this.getLayer(CANVAS_ZLEVEL).resize(width, height);\r\n        }\r\n        else {\r\n            var domRoot = this._domRoot;\r\n            domRoot.style.display = 'none';\r\n            var opts = this._opts;\r\n            var root = this.root;\r\n            width != null && (opts.width = width);\r\n            height != null && (opts.height = height);\r\n            width = getSize(root, 0, opts);\r\n            height = getSize(root, 1, opts);\r\n            domRoot.style.display = '';\r\n            if (this._width !== width || height !== this._height) {\r\n                domRoot.style.width = width + 'px';\r\n                domRoot.style.height = height + 'px';\r\n                for (var id in this._layers) {\r\n                    if (this._layers.hasOwnProperty(id)) {\r\n                        this._layers[id].resize(width, height);\r\n                    }\r\n                }\r\n                this.refresh(true);\r\n            }\r\n            this._width = width;\r\n            this._height = height;\r\n        }\r\n        return this;\r\n    };\r\n    CanvasPainter.prototype.clearLayer = function (zlevel) {\r\n        var layer = this._layers[zlevel];\r\n        if (layer) {\r\n            layer.clear();\r\n        }\r\n    };\r\n    CanvasPainter.prototype.dispose = function () {\r\n        this.root.innerHTML = '';\r\n        this.root =\r\n            this.storage =\r\n                this._domRoot =\r\n                    this._layers = null;\r\n    };\r\n    CanvasPainter.prototype.getRenderedCanvas = function (opts) {\r\n        opts = opts || {};\r\n        if (this._singleCanvas && !this._compositeManually) {\r\n            return this._layers[CANVAS_ZLEVEL].dom;\r\n        }\r\n        var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\r\n        imageLayer.initContext();\r\n        imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\r\n        var ctx = imageLayer.ctx;\r\n        if (opts.pixelRatio <= this.dpr) {\r\n            this.refresh();\r\n            var width_1 = imageLayer.dom.width;\r\n            var height_1 = imageLayer.dom.height;\r\n            this.eachLayer(function (layer) {\r\n                if (layer.__builtin__) {\r\n                    ctx.drawImage(layer.dom, 0, 0, width_1, height_1);\r\n                }\r\n                else if (layer.renderToCanvas) {\r\n                    ctx.save();\r\n                    layer.renderToCanvas(ctx);\r\n                    ctx.restore();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            var scope = {\r\n                inHover: false,\r\n                viewWidth: this._width,\r\n                viewHeight: this._height\r\n            };\r\n            var displayList = this.storage.getDisplayList(true);\r\n            for (var i = 0, len = displayList.length; i < len; i++) {\r\n                var el = displayList[i];\r\n                brush(ctx, el, scope, i === len - 1);\r\n            }\r\n        }\r\n        return imageLayer.dom;\r\n    };\r\n    CanvasPainter.prototype.getWidth = function () {\r\n        return this._width;\r\n    };\r\n    CanvasPainter.prototype.getHeight = function () {\r\n        return this._height;\r\n    };\r\n    return CanvasPainter;\r\n}());\r\nexport default CanvasPainter;\r\n;\r\n", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport CanvasPainter from 'zrender/lib/canvas/Painter.js';\r\nexport function install(registers) {\r\n  registers.registerPainter('canvas', CanvasPainter);\r\n}"],
  "mappings": "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",
  "names": ["SVGPathRebuilder", "el", "animators", "len", "animator", "i", "percent", "brush", "parentNode", "map", "SVGPainter", "brush", "Layer", "i", "width", "height", "CanvasPainter", "k", "layer", "Painter_default", "install", "Painter_default"]
}
