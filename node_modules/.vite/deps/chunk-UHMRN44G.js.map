{
  "version": 3,
  "sources": ["../../echarts/lib/label/LabelManager.js", "../../echarts/lib/label/installLabelLayout.js"],
  "sourcesContent": ["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// TODO: move labels out of viewport.\r\nimport { BoundingRect, updateProps, initProps, isElementRemoved } from '../util/graphic.js';\r\nimport { getECData } from '../util/innerStore.js';\r\nimport { parsePercent } from '../util/number.js';\r\nimport Transformable from 'zrender/lib/core/Transformable.js';\r\nimport { updateLabelLinePoints, setLabelLineStyle, getLabelLineStatesModels } from './labelGuideHelper.js';\r\nimport { makeInner } from '../util/model.js';\r\nimport { retrieve2, each, keys, isFunction, filter, indexOf } from 'zrender/lib/core/util.js';\r\nimport { prepareLayoutList, hideOverlap, shiftLayoutOnX, shiftLayoutOnY } from './labelLayoutHelper.js';\r\nimport { labelInner, animateLabelValue } from './labelStyle.js';\r\n\r\nfunction cloneArr(points) {\r\n  if (points) {\r\n    var newPoints = [];\r\n\r\n    for (var i = 0; i < points.length; i++) {\r\n      newPoints.push(points[i].slice());\r\n    }\r\n\r\n    return newPoints;\r\n  }\r\n}\r\n\r\nfunction prepareLayoutCallbackParams(labelItem, hostEl) {\r\n  var label = labelItem.label;\r\n  var labelLine = hostEl && hostEl.getTextGuideLine();\r\n  return {\r\n    dataIndex: labelItem.dataIndex,\r\n    dataType: labelItem.dataType,\r\n    seriesIndex: labelItem.seriesModel.seriesIndex,\r\n    text: labelItem.label.style.text,\r\n    rect: labelItem.hostRect,\r\n    labelRect: labelItem.rect,\r\n    // x: labelAttr.x,\r\n    // y: labelAttr.y,\r\n    align: label.style.align,\r\n    verticalAlign: label.style.verticalAlign,\r\n    labelLinePoints: cloneArr(labelLine && labelLine.shape.points)\r\n  };\r\n}\r\n\r\nvar LABEL_OPTION_TO_STYLE_KEYS = ['align', 'verticalAlign', 'width', 'height', 'fontSize'];\r\nvar dummyTransformable = new Transformable();\r\nvar labelLayoutInnerStore = makeInner();\r\nvar labelLineAnimationStore = makeInner();\r\n\r\nfunction extendWithKeys(target, source, keys) {\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i];\r\n\r\n    if (source[key] != null) {\r\n      target[key] = source[key];\r\n    }\r\n  }\r\n}\r\n\r\nvar LABEL_LAYOUT_PROPS = ['x', 'y', 'rotation'];\r\n\r\nvar LabelManager =\r\n/** @class */\r\nfunction () {\r\n  function LabelManager() {\r\n    this._labelList = [];\r\n    this._chartViewList = [];\r\n  }\r\n\r\n  LabelManager.prototype.clearLabels = function () {\r\n    this._labelList = [];\r\n    this._chartViewList = [];\r\n  };\r\n  /**\r\n   * Add label to manager\r\n   */\r\n\r\n\r\n  LabelManager.prototype._addLabel = function (dataIndex, dataType, seriesModel, label, layoutOption) {\r\n    var labelStyle = label.style;\r\n    var hostEl = label.__hostTarget;\r\n    var textConfig = hostEl.textConfig || {}; // TODO: If label is in other state.\r\n\r\n    var labelTransform = label.getComputedTransform();\r\n    var labelRect = label.getBoundingRect().plain();\r\n    BoundingRect.applyTransform(labelRect, labelRect, labelTransform);\r\n\r\n    if (labelTransform) {\r\n      dummyTransformable.setLocalTransform(labelTransform);\r\n    } else {\r\n      // Identity transform.\r\n      dummyTransformable.x = dummyTransformable.y = dummyTransformable.rotation = dummyTransformable.originX = dummyTransformable.originY = 0;\r\n      dummyTransformable.scaleX = dummyTransformable.scaleY = 1;\r\n    }\r\n\r\n    var host = label.__hostTarget;\r\n    var hostRect;\r\n\r\n    if (host) {\r\n      hostRect = host.getBoundingRect().plain();\r\n      var transform = host.getComputedTransform();\r\n      BoundingRect.applyTransform(hostRect, hostRect, transform);\r\n    }\r\n\r\n    var labelGuide = hostRect && host.getTextGuideLine();\r\n\r\n    this._labelList.push({\r\n      label: label,\r\n      labelLine: labelGuide,\r\n      seriesModel: seriesModel,\r\n      dataIndex: dataIndex,\r\n      dataType: dataType,\r\n      layoutOption: layoutOption,\r\n      computedLayoutOption: null,\r\n      rect: labelRect,\r\n      hostRect: hostRect,\r\n      // Label with lower priority will be hidden when overlapped\r\n      // Use rect size as default priority\r\n      priority: hostRect ? hostRect.width * hostRect.height : 0,\r\n      // Save default label attributes.\r\n      // For restore if developers want get back to default value in callback.\r\n      defaultAttr: {\r\n        ignore: label.ignore,\r\n        labelGuideIgnore: labelGuide && labelGuide.ignore,\r\n        x: dummyTransformable.x,\r\n        y: dummyTransformable.y,\r\n        scaleX: dummyTransformable.scaleX,\r\n        scaleY: dummyTransformable.scaleY,\r\n        rotation: dummyTransformable.rotation,\r\n        style: {\r\n          x: labelStyle.x,\r\n          y: labelStyle.y,\r\n          align: labelStyle.align,\r\n          verticalAlign: labelStyle.verticalAlign,\r\n          width: labelStyle.width,\r\n          height: labelStyle.height,\r\n          fontSize: labelStyle.fontSize\r\n        },\r\n        cursor: label.cursor,\r\n        attachedPos: textConfig.position,\r\n        attachedRot: textConfig.rotation\r\n      }\r\n    });\r\n  };\r\n\r\n  LabelManager.prototype.addLabelsOfSeries = function (chartView) {\r\n    var _this = this;\r\n\r\n    this._chartViewList.push(chartView);\r\n\r\n    var seriesModel = chartView.__model;\r\n    var layoutOption = seriesModel.get('labelLayout');\r\n    /**\r\n     * Ignore layouting if it's not specified anything.\r\n     */\r\n\r\n    if (!(isFunction(layoutOption) || keys(layoutOption).length)) {\r\n      return;\r\n    }\r\n\r\n    chartView.group.traverse(function (child) {\r\n      if (child.ignore) {\r\n        return true; // Stop traverse descendants.\r\n      } // Only support label being hosted on graphic elements.\r\n\r\n\r\n      var textEl = child.getTextContent();\r\n      var ecData = getECData(child); // Can only attach the text on the element with dataIndex\r\n\r\n      if (textEl && !textEl.disableLabelLayout) {\r\n        _this._addLabel(ecData.dataIndex, ecData.dataType, seriesModel, textEl, layoutOption);\r\n      }\r\n    });\r\n  };\r\n\r\n  LabelManager.prototype.updateLayoutConfig = function (api) {\r\n    var width = api.getWidth();\r\n    var height = api.getHeight();\r\n\r\n    function createDragHandler(el, labelLineModel) {\r\n      return function () {\r\n        updateLabelLinePoints(el, labelLineModel);\r\n      };\r\n    }\r\n\r\n    for (var i = 0; i < this._labelList.length; i++) {\r\n      var labelItem = this._labelList[i];\r\n      var label = labelItem.label;\r\n      var hostEl = label.__hostTarget;\r\n      var defaultLabelAttr = labelItem.defaultAttr;\r\n      var layoutOption = void 0; // TODO A global layout option?\r\n\r\n      if (isFunction(labelItem.layoutOption)) {\r\n        layoutOption = labelItem.layoutOption(prepareLayoutCallbackParams(labelItem, hostEl));\r\n      } else {\r\n        layoutOption = labelItem.layoutOption;\r\n      }\r\n\r\n      layoutOption = layoutOption || {};\r\n      labelItem.computedLayoutOption = layoutOption;\r\n      var degreeToRadian = Math.PI / 180; // TODO hostEl should always exists.\r\n      // Or label should not have parent because the x, y is all in global space.\r\n\r\n      if (hostEl) {\r\n        hostEl.setTextConfig({\r\n          // Force to set local false.\r\n          local: false,\r\n          // Ignore position and rotation config on the host el if x or y is changed.\r\n          position: layoutOption.x != null || layoutOption.y != null ? null : defaultLabelAttr.attachedPos,\r\n          // Ignore rotation config on the host el if rotation is changed.\r\n          rotation: layoutOption.rotate != null ? layoutOption.rotate * degreeToRadian : defaultLabelAttr.attachedRot,\r\n          offset: [layoutOption.dx || 0, layoutOption.dy || 0]\r\n        });\r\n      }\r\n\r\n      var needsUpdateLabelLine = false;\r\n\r\n      if (layoutOption.x != null) {\r\n        // TODO width of chart view.\r\n        label.x = parsePercent(layoutOption.x, width);\r\n        label.setStyle('x', 0); // Ignore movement in style. TODO: origin.\r\n\r\n        needsUpdateLabelLine = true;\r\n      } else {\r\n        label.x = defaultLabelAttr.x;\r\n        label.setStyle('x', defaultLabelAttr.style.x);\r\n      }\r\n\r\n      if (layoutOption.y != null) {\r\n        // TODO height of chart view.\r\n        label.y = parsePercent(layoutOption.y, height);\r\n        label.setStyle('y', 0); // Ignore movement in style.\r\n\r\n        needsUpdateLabelLine = true;\r\n      } else {\r\n        label.y = defaultLabelAttr.y;\r\n        label.setStyle('y', defaultLabelAttr.style.y);\r\n      }\r\n\r\n      if (layoutOption.labelLinePoints) {\r\n        var guideLine = hostEl.getTextGuideLine();\r\n\r\n        if (guideLine) {\r\n          guideLine.setShape({\r\n            points: layoutOption.labelLinePoints\r\n          }); // Not update\r\n\r\n          needsUpdateLabelLine = false;\r\n        }\r\n      }\r\n\r\n      var labelLayoutStore = labelLayoutInnerStore(label);\r\n      labelLayoutStore.needsUpdateLabelLine = needsUpdateLabelLine;\r\n      label.rotation = layoutOption.rotate != null ? layoutOption.rotate * degreeToRadian : defaultLabelAttr.rotation;\r\n      label.scaleX = defaultLabelAttr.scaleX;\r\n      label.scaleY = defaultLabelAttr.scaleY;\r\n\r\n      for (var k = 0; k < LABEL_OPTION_TO_STYLE_KEYS.length; k++) {\r\n        var key = LABEL_OPTION_TO_STYLE_KEYS[k];\r\n        label.setStyle(key, layoutOption[key] != null ? layoutOption[key] : defaultLabelAttr.style[key]);\r\n      }\r\n\r\n      if (layoutOption.draggable) {\r\n        label.draggable = true;\r\n        label.cursor = 'move';\r\n\r\n        if (hostEl) {\r\n          var hostModel = labelItem.seriesModel;\r\n\r\n          if (labelItem.dataIndex != null) {\r\n            var data = labelItem.seriesModel.getData(labelItem.dataType);\r\n            hostModel = data.getItemModel(labelItem.dataIndex);\r\n          }\r\n\r\n          label.on('drag', createDragHandler(hostEl, hostModel.getModel('labelLine')));\r\n        }\r\n      } else {\r\n        // TODO Other drag functions?\r\n        label.off('drag');\r\n        label.cursor = defaultLabelAttr.cursor;\r\n      }\r\n    }\r\n  };\r\n\r\n  LabelManager.prototype.layout = function (api) {\r\n    var width = api.getWidth();\r\n    var height = api.getHeight();\r\n    var labelList = prepareLayoutList(this._labelList);\r\n    var labelsNeedsAdjustOnX = filter(labelList, function (item) {\r\n      return item.layoutOption.moveOverlap === 'shiftX';\r\n    });\r\n    var labelsNeedsAdjustOnY = filter(labelList, function (item) {\r\n      return item.layoutOption.moveOverlap === 'shiftY';\r\n    });\r\n    shiftLayoutOnX(labelsNeedsAdjustOnX, 0, width);\r\n    shiftLayoutOnY(labelsNeedsAdjustOnY, 0, height);\r\n    var labelsNeedsHideOverlap = filter(labelList, function (item) {\r\n      return item.layoutOption.hideOverlap;\r\n    });\r\n    hideOverlap(labelsNeedsHideOverlap);\r\n  };\r\n  /**\r\n   * Process all labels. Not only labels with layoutOption.\r\n   */\r\n\r\n\r\n  LabelManager.prototype.processLabelsOverall = function () {\r\n    var _this = this;\r\n\r\n    each(this._chartViewList, function (chartView) {\r\n      var seriesModel = chartView.__model;\r\n      var ignoreLabelLineUpdate = chartView.ignoreLabelLineUpdate;\r\n      var animationEnabled = seriesModel.isAnimationEnabled();\r\n      chartView.group.traverse(function (child) {\r\n        if (child.ignore && !child.forceLabelAnimation) {\r\n          return true; // Stop traverse descendants.\r\n        }\r\n\r\n        var needsUpdateLabelLine = !ignoreLabelLineUpdate;\r\n        var label = child.getTextContent();\r\n\r\n        if (!needsUpdateLabelLine && label) {\r\n          needsUpdateLabelLine = labelLayoutInnerStore(label).needsUpdateLabelLine;\r\n        }\r\n\r\n        if (needsUpdateLabelLine) {\r\n          _this._updateLabelLine(child, seriesModel);\r\n        }\r\n\r\n        if (animationEnabled) {\r\n          _this._animateLabels(child, seriesModel);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  LabelManager.prototype._updateLabelLine = function (el, seriesModel) {\r\n    // Only support label being hosted on graphic elements.\r\n    var textEl = el.getTextContent(); // Update label line style.\r\n\r\n    var ecData = getECData(el);\r\n    var dataIndex = ecData.dataIndex; // Only support labelLine on the labels represent data.\r\n\r\n    if (textEl && dataIndex != null) {\r\n      var data = seriesModel.getData(ecData.dataType);\r\n      var itemModel = data.getItemModel(dataIndex);\r\n      var defaultStyle = {};\r\n      var visualStyle = data.getItemVisual(dataIndex, 'style');\r\n      var visualType = data.getVisual('drawType'); // Default to be same with main color\r\n\r\n      defaultStyle.stroke = visualStyle[visualType];\r\n      var labelLineModel = itemModel.getModel('labelLine');\r\n      setLabelLineStyle(el, getLabelLineStatesModels(itemModel), defaultStyle);\r\n      updateLabelLinePoints(el, labelLineModel);\r\n    }\r\n  };\r\n\r\n  LabelManager.prototype._animateLabels = function (el, seriesModel) {\r\n    var textEl = el.getTextContent();\r\n    var guideLine = el.getTextGuideLine(); // Animate\r\n\r\n    if (textEl // `forceLabelAnimation` has the highest priority\r\n    && (el.forceLabelAnimation || !textEl.ignore && !textEl.invisible && !el.disableLabelAnimation && !isElementRemoved(el))) {\r\n      var layoutStore = labelLayoutInnerStore(textEl);\r\n      var oldLayout = layoutStore.oldLayout;\r\n      var ecData = getECData(el);\r\n      var dataIndex = ecData.dataIndex;\r\n      var newProps = {\r\n        x: textEl.x,\r\n        y: textEl.y,\r\n        rotation: textEl.rotation\r\n      };\r\n      var data = seriesModel.getData(ecData.dataType);\r\n\r\n      if (!oldLayout) {\r\n        textEl.attr(newProps); // Disable fade in animation if value animation is enabled.\r\n\r\n        if (!labelInner(textEl).valueAnimation) {\r\n          var oldOpacity = retrieve2(textEl.style.opacity, 1); // Fade in animation\r\n\r\n          textEl.style.opacity = 0;\r\n          initProps(textEl, {\r\n            style: {\r\n              opacity: oldOpacity\r\n            }\r\n          }, seriesModel, dataIndex);\r\n        }\r\n      } else {\r\n        textEl.attr(oldLayout); // Make sure the animation from is in the right status.\r\n\r\n        var prevStates = el.prevStates;\r\n\r\n        if (prevStates) {\r\n          if (indexOf(prevStates, 'select') >= 0) {\r\n            textEl.attr(layoutStore.oldLayoutSelect);\r\n          }\r\n\r\n          if (indexOf(prevStates, 'emphasis') >= 0) {\r\n            textEl.attr(layoutStore.oldLayoutEmphasis);\r\n          }\r\n        }\r\n\r\n        updateProps(textEl, newProps, seriesModel, dataIndex);\r\n      }\r\n\r\n      layoutStore.oldLayout = newProps;\r\n\r\n      if (textEl.states.select) {\r\n        var layoutSelect = layoutStore.oldLayoutSelect = {};\r\n        extendWithKeys(layoutSelect, newProps, LABEL_LAYOUT_PROPS);\r\n        extendWithKeys(layoutSelect, textEl.states.select, LABEL_LAYOUT_PROPS);\r\n      }\r\n\r\n      if (textEl.states.emphasis) {\r\n        var layoutEmphasis = layoutStore.oldLayoutEmphasis = {};\r\n        extendWithKeys(layoutEmphasis, newProps, LABEL_LAYOUT_PROPS);\r\n        extendWithKeys(layoutEmphasis, textEl.states.emphasis, LABEL_LAYOUT_PROPS);\r\n      }\r\n\r\n      animateLabelValue(textEl, dataIndex, data, seriesModel, seriesModel);\r\n    }\r\n\r\n    if (guideLine && !guideLine.ignore && !guideLine.invisible) {\r\n      var layoutStore = labelLineAnimationStore(guideLine);\r\n      var oldLayout = layoutStore.oldLayout;\r\n      var newLayout = {\r\n        points: guideLine.shape.points\r\n      };\r\n\r\n      if (!oldLayout) {\r\n        guideLine.setShape(newLayout);\r\n        guideLine.style.strokePercent = 0;\r\n        initProps(guideLine, {\r\n          style: {\r\n            strokePercent: 1\r\n          }\r\n        }, seriesModel);\r\n      } else {\r\n        guideLine.attr({\r\n          shape: oldLayout\r\n        });\r\n        updateProps(guideLine, {\r\n          shape: newLayout\r\n        }, seriesModel);\r\n      }\r\n\r\n      layoutStore.oldLayout = newLayout;\r\n    }\r\n  };\r\n\r\n  return LabelManager;\r\n}();\r\n\r\nexport default LabelManager;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { makeInner } from '../util/model.js';\r\nimport LabelManager from './LabelManager.js';\r\nvar getLabelManager = makeInner();\r\nexport function installLabelLayout(registers) {\r\n  registers.registerUpdateLifecycle('series:beforeupdate', function (ecModel, api, params) {\r\n    // TODO api provide an namespace that can save stuff per instance\r\n    var labelManager = getLabelManager(api).labelManager;\r\n\r\n    if (!labelManager) {\r\n      labelManager = getLabelManager(api).labelManager = new LabelManager();\r\n    }\r\n\r\n    labelManager.clearLabels();\r\n  });\r\n  registers.registerUpdateLifecycle('series:layoutlabels', function (ecModel, api, params) {\r\n    var labelManager = getLabelManager(api).labelManager;\r\n    params.updatedSeries.forEach(function (series) {\r\n      labelManager.addLabelsOfSeries(api.getViewOfSeriesModel(series));\r\n    });\r\n    labelManager.updateLayoutConfig(api);\r\n    labelManager.layout(api);\r\n    labelManager.processLabelsOverall();\r\n  });\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,SAAS,SAAS,QAAQ;AACxB,MAAI,QAAQ;AACV,QAAI,YAAY,CAAC;AAEjB,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,gBAAU,KAAK,OAAO,CAAC,EAAE,MAAM,CAAC;AAAA,IAClC;AAEA,WAAO;AAAA,EACT;AACF;AAEA,SAAS,4BAA4B,WAAW,QAAQ;AACtD,MAAI,QAAQ,UAAU;AACtB,MAAI,YAAY,UAAU,OAAO,iBAAiB;AAClD,SAAO;AAAA,IACL,WAAW,UAAU;AAAA,IACrB,UAAU,UAAU;AAAA,IACpB,aAAa,UAAU,YAAY;AAAA,IACnC,MAAM,UAAU,MAAM,MAAM;AAAA,IAC5B,MAAM,UAAU;AAAA,IAChB,WAAW,UAAU;AAAA;AAAA;AAAA,IAGrB,OAAO,MAAM,MAAM;AAAA,IACnB,eAAe,MAAM,MAAM;AAAA,IAC3B,iBAAiB,SAAS,aAAa,UAAU,MAAM,MAAM;AAAA,EAC/D;AACF;AAEA,IAAI,6BAA6B,CAAC,SAAS,iBAAiB,SAAS,UAAU,UAAU;AACzF,IAAI,qBAAqB,IAAI,sBAAc;AAC3C,IAAI,wBAAwB,UAAU;AACtC,IAAI,0BAA0B,UAAU;AAExC,SAAS,eAAe,QAAQ,QAAQA,OAAM;AAC5C,WAAS,IAAI,GAAG,IAAIA,MAAK,QAAQ,KAAK;AACpC,QAAI,MAAMA,MAAK,CAAC;AAEhB,QAAI,OAAO,GAAG,KAAK,MAAM;AACvB,aAAO,GAAG,IAAI,OAAO,GAAG;AAAA,IAC1B;AAAA,EACF;AACF;AAEA,IAAI,qBAAqB,CAAC,KAAK,KAAK,UAAU;AAE9C,IAAI;AAAA;AAAA,EAEJ,WAAY;AACV,aAASC,gBAAe;AACtB,WAAK,aAAa,CAAC;AACnB,WAAK,iBAAiB,CAAC;AAAA,IACzB;AAEA,IAAAA,cAAa,UAAU,cAAc,WAAY;AAC/C,WAAK,aAAa,CAAC;AACnB,WAAK,iBAAiB,CAAC;AAAA,IACzB;AAMA,IAAAA,cAAa,UAAU,YAAY,SAAU,WAAW,UAAU,aAAa,OAAO,cAAc;AAClG,UAAI,aAAa,MAAM;AACvB,UAAI,SAAS,MAAM;AACnB,UAAI,aAAa,OAAO,cAAc,CAAC;AAEvC,UAAI,iBAAiB,MAAM,qBAAqB;AAChD,UAAI,YAAY,MAAM,gBAAgB,EAAE,MAAM;AAC9C,2BAAa,eAAe,WAAW,WAAW,cAAc;AAEhE,UAAI,gBAAgB;AAClB,2BAAmB,kBAAkB,cAAc;AAAA,MACrD,OAAO;AAEL,2BAAmB,IAAI,mBAAmB,IAAI,mBAAmB,WAAW,mBAAmB,UAAU,mBAAmB,UAAU;AACtI,2BAAmB,SAAS,mBAAmB,SAAS;AAAA,MAC1D;AAEA,UAAI,OAAO,MAAM;AACjB,UAAI;AAEJ,UAAI,MAAM;AACR,mBAAW,KAAK,gBAAgB,EAAE,MAAM;AACxC,YAAI,YAAY,KAAK,qBAAqB;AAC1C,6BAAa,eAAe,UAAU,UAAU,SAAS;AAAA,MAC3D;AAEA,UAAI,aAAa,YAAY,KAAK,iBAAiB;AAEnD,WAAK,WAAW,KAAK;AAAA,QACnB;AAAA,QACA,WAAW;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,sBAAsB;AAAA,QACtB,MAAM;AAAA,QACN;AAAA;AAAA;AAAA,QAGA,UAAU,WAAW,SAAS,QAAQ,SAAS,SAAS;AAAA;AAAA;AAAA,QAGxD,aAAa;AAAA,UACX,QAAQ,MAAM;AAAA,UACd,kBAAkB,cAAc,WAAW;AAAA,UAC3C,GAAG,mBAAmB;AAAA,UACtB,GAAG,mBAAmB;AAAA,UACtB,QAAQ,mBAAmB;AAAA,UAC3B,QAAQ,mBAAmB;AAAA,UAC3B,UAAU,mBAAmB;AAAA,UAC7B,OAAO;AAAA,YACL,GAAG,WAAW;AAAA,YACd,GAAG,WAAW;AAAA,YACd,OAAO,WAAW;AAAA,YAClB,eAAe,WAAW;AAAA,YAC1B,OAAO,WAAW;AAAA,YAClB,QAAQ,WAAW;AAAA,YACnB,UAAU,WAAW;AAAA,UACvB;AAAA,UACA,QAAQ,MAAM;AAAA,UACd,aAAa,WAAW;AAAA,UACxB,aAAa,WAAW;AAAA,QAC1B;AAAA,MACF,CAAC;AAAA,IACH;AAEA,IAAAA,cAAa,UAAU,oBAAoB,SAAU,WAAW;AAC9D,UAAI,QAAQ;AAEZ,WAAK,eAAe,KAAK,SAAS;AAElC,UAAI,cAAc,UAAU;AAC5B,UAAI,eAAe,YAAY,IAAI,aAAa;AAKhD,UAAI,EAAE,WAAW,YAAY,KAAK,KAAK,YAAY,EAAE,SAAS;AAC5D;AAAA,MACF;AAEA,gBAAU,MAAM,SAAS,SAAU,OAAO;AACxC,YAAI,MAAM,QAAQ;AAChB,iBAAO;AAAA,QACT;AAGA,YAAI,SAAS,MAAM,eAAe;AAClC,YAAI,SAAS,UAAU,KAAK;AAE5B,YAAI,UAAU,CAAC,OAAO,oBAAoB;AACxC,gBAAM,UAAU,OAAO,WAAW,OAAO,UAAU,aAAa,QAAQ,YAAY;AAAA,QACtF;AAAA,MACF,CAAC;AAAA,IACH;AAEA,IAAAA,cAAa,UAAU,qBAAqB,SAAU,KAAK;AACzD,UAAI,QAAQ,IAAI,SAAS;AACzB,UAAI,SAAS,IAAI,UAAU;AAE3B,eAAS,kBAAkB,IAAI,gBAAgB;AAC7C,eAAO,WAAY;AACjB,gCAAsB,IAAI,cAAc;AAAA,QAC1C;AAAA,MACF;AAEA,eAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC/C,YAAI,YAAY,KAAK,WAAW,CAAC;AACjC,YAAI,QAAQ,UAAU;AACtB,YAAI,SAAS,MAAM;AACnB,YAAI,mBAAmB,UAAU;AACjC,YAAI,eAAe;AAEnB,YAAI,WAAW,UAAU,YAAY,GAAG;AACtC,yBAAe,UAAU,aAAa,4BAA4B,WAAW,MAAM,CAAC;AAAA,QACtF,OAAO;AACL,yBAAe,UAAU;AAAA,QAC3B;AAEA,uBAAe,gBAAgB,CAAC;AAChC,kBAAU,uBAAuB;AACjC,YAAI,iBAAiB,KAAK,KAAK;AAG/B,YAAI,QAAQ;AACV,iBAAO,cAAc;AAAA;AAAA,YAEnB,OAAO;AAAA;AAAA,YAEP,UAAU,aAAa,KAAK,QAAQ,aAAa,KAAK,OAAO,OAAO,iBAAiB;AAAA;AAAA,YAErF,UAAU,aAAa,UAAU,OAAO,aAAa,SAAS,iBAAiB,iBAAiB;AAAA,YAChG,QAAQ,CAAC,aAAa,MAAM,GAAG,aAAa,MAAM,CAAC;AAAA,UACrD,CAAC;AAAA,QACH;AAEA,YAAI,uBAAuB;AAE3B,YAAI,aAAa,KAAK,MAAM;AAE1B,gBAAM,IAAI,aAAa,aAAa,GAAG,KAAK;AAC5C,gBAAM,SAAS,KAAK,CAAC;AAErB,iCAAuB;AAAA,QACzB,OAAO;AACL,gBAAM,IAAI,iBAAiB;AAC3B,gBAAM,SAAS,KAAK,iBAAiB,MAAM,CAAC;AAAA,QAC9C;AAEA,YAAI,aAAa,KAAK,MAAM;AAE1B,gBAAM,IAAI,aAAa,aAAa,GAAG,MAAM;AAC7C,gBAAM,SAAS,KAAK,CAAC;AAErB,iCAAuB;AAAA,QACzB,OAAO;AACL,gBAAM,IAAI,iBAAiB;AAC3B,gBAAM,SAAS,KAAK,iBAAiB,MAAM,CAAC;AAAA,QAC9C;AAEA,YAAI,aAAa,iBAAiB;AAChC,cAAI,YAAY,OAAO,iBAAiB;AAExC,cAAI,WAAW;AACb,sBAAU,SAAS;AAAA,cACjB,QAAQ,aAAa;AAAA,YACvB,CAAC;AAED,mCAAuB;AAAA,UACzB;AAAA,QACF;AAEA,YAAI,mBAAmB,sBAAsB,KAAK;AAClD,yBAAiB,uBAAuB;AACxC,cAAM,WAAW,aAAa,UAAU,OAAO,aAAa,SAAS,iBAAiB,iBAAiB;AACvG,cAAM,SAAS,iBAAiB;AAChC,cAAM,SAAS,iBAAiB;AAEhC,iBAAS,IAAI,GAAG,IAAI,2BAA2B,QAAQ,KAAK;AAC1D,cAAI,MAAM,2BAA2B,CAAC;AACtC,gBAAM,SAAS,KAAK,aAAa,GAAG,KAAK,OAAO,aAAa,GAAG,IAAI,iBAAiB,MAAM,GAAG,CAAC;AAAA,QACjG;AAEA,YAAI,aAAa,WAAW;AAC1B,gBAAM,YAAY;AAClB,gBAAM,SAAS;AAEf,cAAI,QAAQ;AACV,gBAAI,YAAY,UAAU;AAE1B,gBAAI,UAAU,aAAa,MAAM;AAC/B,kBAAI,OAAO,UAAU,YAAY,QAAQ,UAAU,QAAQ;AAC3D,0BAAY,KAAK,aAAa,UAAU,SAAS;AAAA,YACnD;AAEA,kBAAM,GAAG,QAAQ,kBAAkB,QAAQ,UAAU,SAAS,WAAW,CAAC,CAAC;AAAA,UAC7E;AAAA,QACF,OAAO;AAEL,gBAAM,IAAI,MAAM;AAChB,gBAAM,SAAS,iBAAiB;AAAA,QAClC;AAAA,MACF;AAAA,IACF;AAEA,IAAAA,cAAa,UAAU,SAAS,SAAU,KAAK;AAC7C,UAAI,QAAQ,IAAI,SAAS;AACzB,UAAI,SAAS,IAAI,UAAU;AAC3B,UAAI,YAAY,kBAAkB,KAAK,UAAU;AACjD,UAAI,uBAAuB,OAAO,WAAW,SAAU,MAAM;AAC3D,eAAO,KAAK,aAAa,gBAAgB;AAAA,MAC3C,CAAC;AACD,UAAI,uBAAuB,OAAO,WAAW,SAAU,MAAM;AAC3D,eAAO,KAAK,aAAa,gBAAgB;AAAA,MAC3C,CAAC;AACD,qBAAe,sBAAsB,GAAG,KAAK;AAC7C,qBAAe,sBAAsB,GAAG,MAAM;AAC9C,UAAI,yBAAyB,OAAO,WAAW,SAAU,MAAM;AAC7D,eAAO,KAAK,aAAa;AAAA,MAC3B,CAAC;AACD,kBAAY,sBAAsB;AAAA,IACpC;AAMA,IAAAA,cAAa,UAAU,uBAAuB,WAAY;AACxD,UAAI,QAAQ;AAEZ,WAAK,KAAK,gBAAgB,SAAU,WAAW;AAC7C,YAAI,cAAc,UAAU;AAC5B,YAAI,wBAAwB,UAAU;AACtC,YAAI,mBAAmB,YAAY,mBAAmB;AACtD,kBAAU,MAAM,SAAS,SAAU,OAAO;AACxC,cAAI,MAAM,UAAU,CAAC,MAAM,qBAAqB;AAC9C,mBAAO;AAAA,UACT;AAEA,cAAI,uBAAuB,CAAC;AAC5B,cAAI,QAAQ,MAAM,eAAe;AAEjC,cAAI,CAAC,wBAAwB,OAAO;AAClC,mCAAuB,sBAAsB,KAAK,EAAE;AAAA,UACtD;AAEA,cAAI,sBAAsB;AACxB,kBAAM,iBAAiB,OAAO,WAAW;AAAA,UAC3C;AAEA,cAAI,kBAAkB;AACpB,kBAAM,eAAe,OAAO,WAAW;AAAA,UACzC;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAEA,IAAAA,cAAa,UAAU,mBAAmB,SAAU,IAAI,aAAa;AAEnE,UAAI,SAAS,GAAG,eAAe;AAE/B,UAAI,SAAS,UAAU,EAAE;AACzB,UAAI,YAAY,OAAO;AAEvB,UAAI,UAAU,aAAa,MAAM;AAC/B,YAAI,OAAO,YAAY,QAAQ,OAAO,QAAQ;AAC9C,YAAI,YAAY,KAAK,aAAa,SAAS;AAC3C,YAAI,eAAe,CAAC;AACpB,YAAI,cAAc,KAAK,cAAc,WAAW,OAAO;AACvD,YAAI,aAAa,KAAK,UAAU,UAAU;AAE1C,qBAAa,SAAS,YAAY,UAAU;AAC5C,YAAI,iBAAiB,UAAU,SAAS,WAAW;AACnD,0BAAkB,IAAI,yBAAyB,SAAS,GAAG,YAAY;AACvE,8BAAsB,IAAI,cAAc;AAAA,MAC1C;AAAA,IACF;AAEA,IAAAA,cAAa,UAAU,iBAAiB,SAAU,IAAI,aAAa;AACjE,UAAI,SAAS,GAAG,eAAe;AAC/B,UAAI,YAAY,GAAG,iBAAiB;AAEpC,UAAI,WACA,GAAG,uBAAuB,CAAC,OAAO,UAAU,CAAC,OAAO,aAAa,CAAC,GAAG,yBAAyB,CAAC,iBAAiB,EAAE,IAAI;AACxH,YAAI,cAAc,sBAAsB,MAAM;AAC9C,YAAI,YAAY,YAAY;AAC5B,YAAI,SAAS,UAAU,EAAE;AACzB,YAAI,YAAY,OAAO;AACvB,YAAI,WAAW;AAAA,UACb,GAAG,OAAO;AAAA,UACV,GAAG,OAAO;AAAA,UACV,UAAU,OAAO;AAAA,QACnB;AACA,YAAI,OAAO,YAAY,QAAQ,OAAO,QAAQ;AAE9C,YAAI,CAAC,WAAW;AACd,iBAAO,KAAK,QAAQ;AAEpB,cAAI,CAAC,WAAW,MAAM,EAAE,gBAAgB;AACtC,gBAAI,aAAa,UAAU,OAAO,MAAM,SAAS,CAAC;AAElD,mBAAO,MAAM,UAAU;AACvB,sBAAU,QAAQ;AAAA,cAChB,OAAO;AAAA,gBACL,SAAS;AAAA,cACX;AAAA,YACF,GAAG,aAAa,SAAS;AAAA,UAC3B;AAAA,QACF,OAAO;AACL,iBAAO,KAAK,SAAS;AAErB,cAAI,aAAa,GAAG;AAEpB,cAAI,YAAY;AACd,gBAAI,QAAQ,YAAY,QAAQ,KAAK,GAAG;AACtC,qBAAO,KAAK,YAAY,eAAe;AAAA,YACzC;AAEA,gBAAI,QAAQ,YAAY,UAAU,KAAK,GAAG;AACxC,qBAAO,KAAK,YAAY,iBAAiB;AAAA,YAC3C;AAAA,UACF;AAEA,sBAAY,QAAQ,UAAU,aAAa,SAAS;AAAA,QACtD;AAEA,oBAAY,YAAY;AAExB,YAAI,OAAO,OAAO,QAAQ;AACxB,cAAI,eAAe,YAAY,kBAAkB,CAAC;AAClD,yBAAe,cAAc,UAAU,kBAAkB;AACzD,yBAAe,cAAc,OAAO,OAAO,QAAQ,kBAAkB;AAAA,QACvE;AAEA,YAAI,OAAO,OAAO,UAAU;AAC1B,cAAI,iBAAiB,YAAY,oBAAoB,CAAC;AACtD,yBAAe,gBAAgB,UAAU,kBAAkB;AAC3D,yBAAe,gBAAgB,OAAO,OAAO,UAAU,kBAAkB;AAAA,QAC3E;AAEA,0BAAkB,QAAQ,WAAW,MAAM,aAAa,WAAW;AAAA,MACrE;AAEA,UAAI,aAAa,CAAC,UAAU,UAAU,CAAC,UAAU,WAAW;AAC1D,YAAI,cAAc,wBAAwB,SAAS;AACnD,YAAI,YAAY,YAAY;AAC5B,YAAI,YAAY;AAAA,UACd,QAAQ,UAAU,MAAM;AAAA,QAC1B;AAEA,YAAI,CAAC,WAAW;AACd,oBAAU,SAAS,SAAS;AAC5B,oBAAU,MAAM,gBAAgB;AAChC,oBAAU,WAAW;AAAA,YACnB,OAAO;AAAA,cACL,eAAe;AAAA,YACjB;AAAA,UACF,GAAG,WAAW;AAAA,QAChB,OAAO;AACL,oBAAU,KAAK;AAAA,YACb,OAAO;AAAA,UACT,CAAC;AACD,sBAAY,WAAW;AAAA,YACrB,OAAO;AAAA,UACT,GAAG,WAAW;AAAA,QAChB;AAEA,oBAAY,YAAY;AAAA,MAC1B;AAAA,IACF;AAEA,WAAOA;AAAA,EACT,EAAE;AAAA;AAEF,IAAO,uBAAQ;;;AChcf,IAAI,kBAAkB,UAAU;AACzB,SAAS,mBAAmB,WAAW;AAC5C,YAAU,wBAAwB,uBAAuB,SAAU,SAAS,KAAK,QAAQ;AAEvF,QAAI,eAAe,gBAAgB,GAAG,EAAE;AAExC,QAAI,CAAC,cAAc;AACjB,qBAAe,gBAAgB,GAAG,EAAE,eAAe,IAAI,qBAAa;AAAA,IACtE;AAEA,iBAAa,YAAY;AAAA,EAC3B,CAAC;AACD,YAAU,wBAAwB,uBAAuB,SAAU,SAAS,KAAK,QAAQ;AACvF,QAAI,eAAe,gBAAgB,GAAG,EAAE;AACxC,WAAO,cAAc,QAAQ,SAAU,QAAQ;AAC7C,mBAAa,kBAAkB,IAAI,qBAAqB,MAAM,CAAC;AAAA,IACjE,CAAC;AACD,iBAAa,mBAAmB,GAAG;AACnC,iBAAa,OAAO,GAAG;AACvB,iBAAa,qBAAqB;AAAA,EACpC,CAAC;AACH;",
  "names": ["keys", "LabelManager"]
}
