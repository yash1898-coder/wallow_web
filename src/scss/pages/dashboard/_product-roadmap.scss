@use '../../base' as *;
@use '../../abstracts' as *;

.timeline {
    --_gap: 3.5rem;
    --_max-width: 50rem;
    margin-top: min(8vw, 5rem);
    display: flex;
    flex-direction: column;
    gap: var(--_gap);
    position: relative;
    isolation: isolate;
    width: fit-content;
    max-width: var(--_max-width);


    @media(min-width: map-get($breakpoints, lg)) {
        width: auto;
        row-gap: 2rem;
    }

    &::before {
        content: '';
        background-color: var(--clr-neutral-800);
        width: .25rem;
        height: 100%;
        z-index: -1;
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
    }
}

.timeline-form {
    margin-top: min(5vw, 3rem);
    border: 1px solid var(--clr-neutral-500);
    border-radius: .5rem;
    padding: 1.25rem;
    max-width: 700px;

    &__selects {
        display: grid;
        gap: 1rem;

        @media (min-width: 460px) {
            grid-template-columns: 1fr 1fr;
        }
    }
}

.timeline-item {
    box-shadow: .1rem .1rem 2rem rgb(0 0 0 / .05);
    border: 1px solid var(--clr-neutral-500);
    background-color: var(--clr-neutral-200);
    border-radius: .5rem;
    padding: 1.25rem;
    max-width: 300px;
    position: relative;

    &__selects {
        width: 100%;
        display: grid;
        gap: 1rem;
        grid-template-columns: 1fr 1fr;
    }

    &::before {
        content: '';
        background-color: #fff;
        border: 3px solid var(--clr-neutral-800);
        width: 1.5rem;
        height: 1.5rem;
        border-radius: 100vmax;
        position: absolute;
    }

    @media(max-width: map-get($breakpoints, lg)) {
        &::before {
            bottom: calc(calc(var(--_gap) * -1) / 1.3);
            left: 50%;
            transform: translateX(-50%);
        }

        &:last-of-type::before {
            display: none;
        }
    }

    @media(min-width: map-get($breakpoints, lg)) {
        width: calc(50% - calc(var(--_gap) / 2));
        max-width: calc(var(--_max-width) / 2);

        &:nth-of-type(odd) {
            align-self: flex-end;
        }

        &::before {
            top: 50%;
            transform: translateY(-50%);
        }

        &:nth-of-type(odd)::before {
            left: calc(calc(var(--_gap) / 1.35) * -1);
        }

        &:nth-of-type(even)::before {
            right: calc(calc(var(--_gap) / 1.35) * -1);
        }
    }
}